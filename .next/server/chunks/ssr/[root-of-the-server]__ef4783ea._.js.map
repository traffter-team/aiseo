{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":["file:///Users/vkyrychenko/Desktop/aiseo/src/lib/db/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\n\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;\n\nif (!supabaseUrl || !supabaseAnonKey) {\n  throw new Error('Missing Supabase environment variables');\n}\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\n\n// Database types\nexport interface Database {\n  public: {\n    Tables: {\n      casino_submissions: {\n        Row: {\n          id: string;\n          brand_name: string;\n          target_country: string;\n          target_language: string;\n          created_at: string;\n          updated_at: string;\n        };\n        Insert: {\n          id?: string;\n          brand_name: string;\n          target_country: string;\n          target_language: string;\n          created_at?: string;\n          updated_at?: string;\n        };\n        Update: {\n          id?: string;\n          brand_name?: string;\n          target_country?: string;\n          target_language?: string;\n          created_at?: string;\n          updated_at?: string;\n        };\n      };\n    };\n  };\n}\n\n// Typed Supabase client\nexport const typedSupabase = createClient<Database>(supabaseUrl, supabaseAnonKey); "],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM;AACN,MAAM;AAEN;;AAIO,MAAM,WAAW,CAAA,GAAA,uLAAA,CAAA,eAAY,AAAD,EAAE,aAAa;AAqC3C,MAAM,gBAAgB,CAAA,GAAA,uLAAA,CAAA,eAAY,AAAD,EAAY,aAAa","debugId":null}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":["file:///Users/vkyrychenko/Desktop/aiseo/src/lib/db/queries.ts"],"sourcesContent":["import { supabase } from './supabase';\nimport type { \n  Project, \n  CreateProject, \n  ProjectFile, \n  CreateProjectFile,\n  AgentTask,\n  CreateAgentTask,\n  ProjectVersion,\n  CreateProjectVersion,\n  ErrorLog,\n  CreateErrorLog,\n  LibraryItem,\n  CreateLibraryItem,\n  Edit,\n  CreateEdit,\n  Asset,\n  CreateAsset,\n  SeoReport,\n  CreateSeoReport,\n  OrchestratorLog,\n  CreateOrchestratorLog\n} from './types';\n\n// ===== PROJECTS =====\nexport async function createProject(data: CreateProject): Promise<Project | null> {\n  try {\n    const { data: project, error } = await supabase\n      .from('projects')\n      .insert([data])\n      .select()\n      .single();\n\n    if (error) {\n      console.error('Error creating project:', error);\n      throw error;\n    }\n\n    return project;\n  } catch (error) {\n    console.error('Failed to create project:', error);\n    return null;\n  }\n}\n\nexport async function getProjects(): Promise<Project[]> {\n  try {\n    const { data: projects, error } = await supabase\n      .from('projects')\n      .select('*')\n      .order('created_at', { ascending: false });\n\n    if (error) {\n      console.error('Error fetching projects:', error);\n      throw error;\n    }\n\n    return projects || [];\n  } catch (error) {\n    console.error('Failed to fetch projects:', error);\n    return [];\n  }\n}\n\nexport async function getProjectById(id: string): Promise<Project | null> {\n  try {\n    const { data: project, error } = await supabase\n      .from('projects')\n      .select('*')\n      .eq('id', id)\n      .single();\n\n    if (error) {\n      console.error('Error fetching project:', error);\n      throw error;\n    }\n\n    return project;\n  } catch (error) {\n    console.error('Failed to fetch project:', error);\n    return null;\n  }\n}\n\nexport async function updateProject(id: string, data: Partial<CreateProject>): Promise<Project | null> {\n  try {\n    const { data: project, error } = await supabase\n      .from('projects')\n      .update(data)\n      .eq('id', id)\n      .select()\n      .single();\n\n    if (error) {\n      console.error('Error updating project:', error);\n      throw error;\n    }\n\n    return project;\n  } catch (error) {\n    console.error('Failed to update project:', error);\n    return null;\n  }\n}\n\n// ===== PROJECT FILES =====\nexport async function createProjectFile(data: CreateProjectFile): Promise<ProjectFile | null> {\n  try {\n    const { data: file, error } = await supabase\n      .from('project_files')\n      .insert([data])\n      .select()\n      .single();\n\n    if (error) {\n      console.error('Error creating project file:', error);\n      throw error;\n    }\n\n    return file;\n  } catch (error) {\n    console.error('Failed to create project file:', error);\n    return null;\n  }\n}\n\nexport async function getProjectFiles(projectId: string): Promise<ProjectFile[]> {\n  try {\n    const { data: files, error } = await supabase\n      .from('project_files')\n      .select('*')\n      .eq('project_id', projectId)\n      .order('created_at', { ascending: false });\n\n    if (error) {\n      console.error('Error fetching project files:', error);\n      throw error;\n    }\n\n    return files || [];\n  } catch (error) {\n    console.error('Failed to fetch project files:', error);\n    return [];\n  }\n}\n\n// ===== AGENT TASKS =====\nexport async function createAgentTask(data: CreateAgentTask): Promise<AgentTask | null> {\n  try {\n    const { data: task, error } = await supabase\n      .from('agent_tasks')\n      .insert([data])\n      .select()\n      .single();\n\n    if (error) {\n      console.error('Error creating agent task:', error);\n      throw error;\n    }\n\n    return task;\n  } catch (error) {\n    console.error('Failed to create agent task:', error);\n    return null;\n  }\n}\n\nexport async function getAgentTasks(projectId: string): Promise<AgentTask[]> {\n  try {\n    const { data: tasks, error } = await supabase\n      .from('agent_tasks')\n      .select('*')\n      .eq('project_id', projectId)\n      .order('created_at', { ascending: false });\n\n    if (error) {\n      console.error('Error fetching agent tasks:', error);\n      throw error;\n    }\n\n    return tasks || [];\n  } catch (error) {\n    console.error('Failed to fetch agent tasks:', error);\n    return [];\n  }\n}\n\n// ===== PROJECT VERSIONS =====\nexport async function createProjectVersion(data: CreateProjectVersion): Promise<ProjectVersion | null> {\n  try {\n    const { data: version, error } = await supabase\n      .from('project_versions')\n      .insert([data])\n      .select()\n      .single();\n\n    if (error) {\n      console.error('Error creating project version:', error);\n      throw error;\n    }\n\n    return version;\n  } catch (error) {\n    console.error('Failed to create project version:', error);\n    return null;\n  }\n}\n\n// ===== ERROR LOGS =====\nexport async function createErrorLog(data: CreateErrorLog): Promise<ErrorLog | null> {\n  try {\n    const { data: errorLog, error } = await supabase\n      .from('error_log')\n      .insert([data])\n      .select()\n      .single();\n\n    if (error) {\n      console.error('Error creating error log:', error);\n      throw error;\n    }\n\n    return errorLog;\n  } catch (error) {\n    console.error('Failed to create error log:', error);\n    return null;\n  }\n}\n\n// ===== LIBRARY =====\nexport async function createLibraryItem(data: CreateLibraryItem): Promise<LibraryItem | null> {\n  try {\n    const { data: item, error } = await supabase\n      .from('library')\n      .insert([data])\n      .select()\n      .single();\n\n    if (error) {\n      console.error('Error creating library item:', error);\n      throw error;\n    }\n\n    return item;\n  } catch (error) {\n    console.error('Failed to create library item:', error);\n    return null;\n  }\n}\n\n// ===== EDITS =====\nexport async function createEdit(data: CreateEdit): Promise<Edit | null> {\n  try {\n    const { data: edit, error } = await supabase\n      .from('edits')\n      .insert([data])\n      .select()\n      .single();\n\n    if (error) {\n      console.error('Error creating edit:', error);\n      throw error;\n    }\n\n    return edit;\n  } catch (error) {\n    console.error('Failed to create edit:', error);\n    return null;\n  }\n}\n\n// ===== ASSETS =====\nexport async function createAsset(data: CreateAsset): Promise<Asset | null> {\n  try {\n    const { data: asset, error } = await supabase\n      .from('assets')\n      .insert([data])\n      .select()\n      .single();\n\n    if (error) {\n      console.error('Error creating asset:', error);\n      throw error;\n    }\n\n    return asset;\n  } catch (error) {\n    console.error('Failed to create asset:', error);\n    return null;\n  }\n}\n\n// ===== SEO REPORTS =====\nexport async function createSeoReport(data: CreateSeoReport): Promise<SeoReport | null> {\n  try {\n    const { data: report, error } = await supabase\n      .from('seo_reports')\n      .insert([data])\n      .select()\n      .single();\n\n    if (error) {\n      console.error('Error creating SEO report:', error);\n      throw error;\n    }\n\n    return report;\n  } catch (error) {\n    console.error('Failed to create SEO report:', error);\n    return null;\n  }\n}\n\n// ===== ORCHESTRATOR LOGS =====\nexport async function createOrchestratorLog(data: CreateOrchestratorLog): Promise<OrchestratorLog | null> {\n  try {\n    const { data: log, error } = await supabase\n      .from('orchestrator_logs')\n      .insert([data])\n      .select()\n      .single();\n\n    if (error) {\n      console.error('Error creating orchestrator log:', error);\n      throw error;\n    }\n\n    return log;\n  } catch (error) {\n    console.error('Failed to create orchestrator log:', error);\n    return null;\n  }\n}\n\n// Legacy function for backward compatibility (can be removed later)\nexport async function createCasinoSubmission(data: any): Promise<any> {\n  console.warn('createCasinoSubmission is deprecated. Use createProject instead.');\n  return createProject({\n    status: 'created',\n    state: 'initial',\n    user_input: data,\n    meta: null,\n    output_refs: null\n  });\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 372, "column": 0}, "map": {"version":3,"sources":["file:///Users/vkyrychenko/Desktop/aiseo/src/lib/page-library.ts"],"sourcesContent":["export interface Section {\n  name: string;\n  purpose: string;\n  seoNote?: string;\n}\n\nexport interface PageTemplate {\n  name: string;\n  suggestedSections: Section[];\n}\n\nexport interface PageLibrary {\n  [key: string]: PageTemplate;\n}\n\nexport const pageLibrary: PageLibrary = {\n  Home: {\n    name: \"Home Page\",\n    suggestedSections: [\n      {\n        name: \"Hero Banner\",\n        purpose:\n          \"Primary H1 + Unique Selling Proposition + Call to Action. Example: 'Welcome to [CasinoName] - Get Your [BonusDetails] Now!'\",\n        seoNote: \"Very important—targets main brand keyword, drives click-throughs.\",\n      },\n      {\n        name: \"Top Casinos Showcase\",\n        purpose: \"Visually appealing section to showcase 3–5 featured partner casinos or top game categories.\",\n      },\n      {\n        name: \"Why Choose Us\",\n        purpose:\n          \"Bullet points highlighting key benefits and trust factors (e.g., 'Licensed & Secure', 'Fast Payouts', '24/7 Support').\",\n      },\n      {\n        name: \"Latest Reviews Feed\",\n        purpose: \"Dynamic section displaying snippets or links to the latest casino/game reviews.\",\n      },\n      {\n        name: \"Trending Games\",\n        purpose: \"Showcase popular or new games with links to their individual guides or play pages.\",\n      },\n      {\n        name: \"User Testimonials\",\n        purpose: \"Section for social proof, featuring positive quotes or feedback from users.\",\n      },\n      {\n        name: \"FAQ Preview\",\n        purpose: \"A small section with 2-3 common questions and answers, linking to the full FAQ page.\",\n      },\n      { name: \"Blog Teasers\", purpose: \"Snippets of the latest blog articles to encourage further reading.\" },\n      {\n        name: \"Footer\",\n        purpose: \"Standard footer with navigation links, legal information, responsible gaming links, and copyright.\",\n      },\n    ],\n  },\n  Reviews: {\n    name: \"Casino Review Page\",\n    suggestedSections: [\n      {\n        name: \"Review Headline\",\n        purpose: \"H1: '[Casino Name] Review [Current Year] - Expert Analysis & Player Ratings'.\",\n        seoNote: \"Very important—targets exact-match review keyword.\",\n      },\n      {\n        name: \"Rating Summary Box\",\n        purpose: \"Overall star rating, brief pros/cons list, and a primary CTA to visit the casino.\",\n      },\n      {\n        name: \"Full In-depth Review\",\n        purpose:\n          \"Comprehensive analysis covering bonuses, game selection, user experience, mobile compatibility, customer support, and security. Use H2/H3 for sub-sections.\",\n      },\n      {\n        name: \"Exclusive Bonus Offers\",\n        purpose: \"Highlight any special or exclusive bonuses available for the reviewed casino, with clear CTAs.\",\n      },\n      {\n        name: \"Game Library Overview\",\n        purpose: \"Summary of game types and notable software providers available at the casino.\",\n      },\n      {\n        name: \"Banking Options Table\",\n        purpose: \"Table detailing deposit and withdrawal methods, processing times, and limits.\",\n      },\n      {\n        name: \"Player Feedback & Comments\",\n        purpose: \"Section to display or collect user-generated reviews and comments.\",\n      },\n      { name: \"Casino-Specific FAQs\", purpose: \"Frequently asked questions specifically about the reviewed casino.\" },\n      { name: \"Related Casino Reviews\", purpose: \"Links to reviews of similar or alternative casinos.\" },\n    ],\n  },\n  Guide: {\n    name: \"Game/Strategy Guide Page\",\n    suggestedSections: [\n      { name: \"Guide Headline\", purpose: \"H1: '[Game Name] - How to Play & Win' or '[Strategy Topic] Explained'.\" },\n      {\n        name: \"Overview / Introduction\",\n        purpose:\n          \"Brief introduction to the game or strategy, including key features (e.g., RTP, volatility for games).\",\n      },\n      {\n        name: \"How to Play / Step-by-Step\",\n        purpose: \"Detailed, step-by-step instructions for playing the game or implementing the strategy.\",\n      },\n      {\n        name: \"Bonus Features / Key Elements\",\n        purpose: \"Explanation of special rounds, bonus features (for games), or critical components of the strategy.\",\n      },\n      {\n        name: \"Payouts & Volatility / Success Metrics\",\n        purpose: \"Data tables for game payouts or metrics for strategy effectiveness.\",\n      },\n      { name: \"Pros & Cons\", purpose: \"Quick bullet list summarizing advantages and disadvantages.\" },\n      { name: \"Video Demonstration\", purpose: \"Embedded video showing gameplay or strategy in action.\" },\n      { name: \"Similar Games / Related Guides\", purpose: \"Links to other relevant internal content.\" },\n      { name: \"User Comments / Discussion\", purpose: \"Section for user feedback and discussion.\" },\n    ],\n  },\n  Bonuses: {\n    name: \"Bonuses Page\",\n    suggestedSections: [\n      { name: \"Bonuses Headline\", purpose: \"H1: 'Best Online Casino Bonuses [Current Year] - Updated List'.\" },\n      {\n        name: \"Explanation of Bonus Types\",\n        purpose:\n          \"Detailed explanations of different bonus types (e.g., Welcome, No-Deposit, Free Spins, Reload, Cashback).\",\n      },\n      {\n        name: \"Top Bonus Offers Table\",\n        purpose: \"A ranked or categorized table showcasing the best current bonus offers with key details and CTAs.\",\n      },\n      { name: \"How to Claim a Bonus Guide\", purpose: \"Step-by-step instructions on how to claim bonuses.\" },\n      {\n        name: \"Understanding Bonus Terms\",\n        purpose:\n          \"Explanation of common bonus terms and conditions like wagering requirements, game restrictions, and validity periods.\",\n      },\n      {\n        name: \"Regional Bonus Information\",\n        purpose: \"Sections or filters for bonuses available in specific countries or regions, if applicable.\",\n      },\n    ],\n  },\n  Blog: {\n    name: \"Blog Post\",\n    suggestedSections: [\n      { name: \"Blog Post Headline\", purpose: \"H1: Engaging title targeting a specific long-tail keyword or topic.\" },\n      {\n        name: \"Introduction\",\n        purpose: \"Compelling introduction (100–150 words) that sets the context and user intent.\",\n      },\n      {\n        name: \"Main Content Subtopics\",\n        purpose: \"Well-structured content using H2/H3 headings for subtopics, incorporating LSI keywords.\",\n      },\n      {\n        name: \"Internal and External Links\",\n        purpose: \"Strategically placed links to relevant internal pages and 1-2 authoritative external resources.\",\n      },\n      {\n        name: \"FAQ Section for Article\",\n        purpose: \"3–5 relevant Q&As related to the blog post topic, optimized for featured snippets.\",\n      },\n      {\n        name: \"Author Box\",\n        purpose: \"Information about the author to build E-A-T (Expertise, Authoritativeness, Trustworthiness).\",\n      },\n      {\n        name: \"Call to Action\",\n        purpose: \"Encourage users to subscribe to a newsletter, read related articles, or explore casino offers.\",\n      },\n    ],\n  },\n  FAQ: {\n    name: \"FAQ Page\",\n    suggestedSections: [\n      {\n        name: \"FAQ Headline\",\n        purpose: \"H1: '[Site Name] - Frequently Asked Questions' or 'FAQ for [Specific Topic]'.\",\n      },\n      {\n        name: \"Categorized Q&A Blocks\",\n        purpose:\n          \"Questions and answers organized into categories (e.g., Account, Bonuses, Payments). Use accordion or <details> for better UX.\",\n      },\n      { name: \"Search Functionality\", purpose: \"Allow users to search FAQs.\" },\n      { name: \"Related Links\", purpose: \"Links from answers to more detailed guides or relevant pages on the site.\" },\n    ],\n  },\n  About: {\n    name: \"About Us Page\",\n    suggestedSections: [\n      { name: \"Our Story / Mission\", purpose: \"Narrative about the brand's mission, history, and values.\" },\n      {\n        name: \"Meet the Team\",\n        purpose: \"Introduce key team members with photos and brief bios to build trust and E-A-T.\",\n      },\n      { name: \"Our Commitment\", purpose: \"Statements on fair play, security, responsible gaming, etc.\" },\n      { name: \"Contact Information Snippet\", purpose: \"Brief contact info with a link to the full Contact Us page.\" },\n    ],\n  },\n  Contact: {\n    name: \"Contact Us Page\",\n    suggestedSections: [\n      { name: \"Contact Headline\", purpose: \"H1: 'Contact Us - Get in Touch with [Site Name]'.\" },\n      {\n        name: \"Contact Form\",\n        purpose: \"Form for user inquiries, categorized if possible (e.g., General, Support, Partnership).\",\n      },\n      {\n        name: \"Direct Contact Methods\",\n        purpose: \"Email addresses, phone numbers (if applicable), and physical address (for local SEO schema).\",\n      },\n      { name: \"Map Integration\", purpose: \"Embedded map if there's a physical office location.\" },\n      { name: \"Social Media Links\", purpose: \"Links to official social media profiles.\" },\n    ],\n  },\n  Legal: {\n    name: \"Legal Pages (Terms, Privacy, etc.)\",\n    suggestedSections: [\n      { name: \"Page Title (e.g., Terms and Conditions)\", purpose: \"Clear H1 for the specific legal document.\" },\n      {\n        name: \"Main Legal Text\",\n        purpose:\n          \"The full text of the terms, privacy policy, cookie policy, or responsible gambling policy. Properly structured with headings.\",\n      },\n      { name: \"Last Updated Date\", purpose: \"Clearly state when the document was last revised.\" },\n      { name: \"Navigation to Other Legal Docs\", purpose: \"Easy links to other related legal pages.\" },\n    ],\n  },\n  Slots: {\n    name: \"Slots/Games Hub Page\",\n    suggestedSections: [\n      {\n        name: \"Games Hub Headline\",\n        purpose: \"H1: 'Play Online Slots & Casino Games at [CasinoName]' or 'Explore Thousands of Casino Games'.\",\n        seoNote: \"Important—targets broad game-category keywords.\",\n      },\n      {\n        name: \"Game Category Navigation\",\n        purpose: \"Clear links or tabs for different game categories (e.g., Slots, Table Games, Live Dealer, Jackpots).\",\n      },\n      {\n        name: \"Featured Slots/Games\",\n        purpose: \"Showcase a selection of top, new, or popular games with appealing visuals and play links.\",\n      },\n      {\n        name: \"Filter & Sort Options\",\n        purpose: \"Allow users to filter games by provider, type, features, RTP, volatility, etc.\",\n      },\n      { name: \"Top RTP Games List\", purpose: \"Section highlighting games with high Return to Player percentages.\" },\n      { name: \"New Releases Section\", purpose: \"Display the newest game titles added to the platform.\" },\n      {\n        name: \"Popular Game Providers Links\",\n        purpose: \"Links to pages or sections dedicated to specific game software providers.\",\n      },\n      {\n        name: \"How to Choose a Game Guide Snippet\",\n        purpose: \"Brief advice for players on selecting games that suit their preferences, linking to a full guide.\",\n      },\n    ],\n  },\n  Providers: {\n    name: \"Game Providers Page\",\n    suggestedSections: [\n      {\n        name: \"Providers Headline\",\n        purpose: \"H1: 'Top Casino Game Providers' or 'Discover Games by Leading Software Developers'.\",\n        seoNote: \"Targets industry authority & brand names of providers.\",\n      },\n      {\n        name: \"Provider Listing\",\n        purpose: \"Alphabetical or categorized list of game providers with their logos and a brief introduction.\",\n      },\n      {\n        name: \"Individual Provider Profile Teasers\",\n        purpose:\n          \"Short summaries for each provider, linking to dedicated review pages or filtered game lists for that provider.\",\n      },\n      {\n        name: \"Provider Comparison Table\",\n        purpose: \"Table comparing key features, game types, or popular titles from different providers.\",\n      },\n      {\n        name: \"Search/Filter for Providers\",\n        purpose:\n          \"Allow users to search for specific providers or filter by game genres they specialize in, region, technology, etc.\",\n      },\n    ],\n  },\n  \"Payment Methods\": {\n    name: \"Payment Methods Page\",\n    suggestedSections: [\n      {\n        name: \"Payments Headline\",\n        purpose: \"H1: 'Casino Payment & Banking Options' or 'Secure Deposits & Withdrawals'.\",\n        seoNote: \"Critical—keywords for transaction-related queries.\",\n      },\n      {\n        name: \"Deposit Methods Overview\",\n        purpose:\n          \"List of available deposit methods (e.g., Credit/Debit Cards, E-wallets, Bank Transfers, Cryptocurrency) with logos and brief descriptions.\",\n      },\n      {\n        name: \"Withdrawal Methods Overview\",\n        purpose:\n          \"List of available withdrawal methods, highlighting processing times and any differences from deposit methods.\",\n      },\n      {\n        name: \"Detailed Information Table\",\n        purpose:\n          \"Table showing methods, typical processing times for deposits/withdrawals, min/max limits, and any potential fees.\",\n      },\n      {\n        name: \"How to Deposit/Withdraw Guides\",\n        purpose: \"Step-by-step instructions for making deposits and requesting withdrawals.\",\n      },\n      {\n        name: \"Security of Transactions\",\n        purpose: \"Information on security measures used to protect financial transactions (SSL, encryption, etc.).\",\n      },\n    ],\n  },\n  \"Tournaments & Events\": {\n    name: \"Tournaments & Events Page\",\n    suggestedSections: [\n      { name: \"Tournaments Headline\", purpose: \"H1: 'Join Exciting Casino Tournaments & Events'.\" },\n      {\n        name: \"Upcoming Events Calendar/List\",\n        purpose:\n          \"Display a schedule of current and upcoming tournaments or special events, including dates, game types, and prize pools.\",\n      },\n      {\n        name: \"How to Participate Guide\",\n        purpose:\n          \"Clear instructions on how to enter tournaments, including entry fees, qualification criteria, and rules.\",\n      },\n      { name: \"Featured Tournaments\", purpose: \"Highlight major or ongoing tournaments with more details.\" },\n      {\n        name: \"Past Winners & Leaderboards\",\n        purpose: \"Showcase previous tournament winners or current leaderboards to create excitement and social proof.\",\n      },\n      {\n        name: \"Event-Specific FAQs\",\n        purpose: \"Address common questions related to participating in tournaments and events.\",\n      },\n    ],\n  },\n  \"Mobile Apps\": {\n    name: \"Mobile Apps Page\",\n    suggestedSections: [\n      {\n        name: \"Mobile Apps Headline\",\n        purpose: \"H1: 'Download Our Casino Mobile App - Play on iOS & Android'.\",\n        seoNote: \"Useful for 'casino app' searches.\",\n      },\n      {\n        name: \"App Store Download Links\",\n        purpose:\n          \"Prominent buttons or badges linking directly to the app on the Apple App Store and Google Play Store.\",\n      },\n      {\n        name: \"Mobile App Features & Screenshots\",\n        purpose: \"Showcase key features of the mobile app with appealing screenshots or mockups.\",\n      },\n      {\n        name: \"Device Compatibility Information\",\n        purpose: \"Specify supported operating systems and device requirements.\",\n      },\n      {\n        name: \"Installation Guide\",\n        purpose: \"Simple step-by-step instructions on how to download and install the app.\",\n      },\n      {\n        name: \"Mobile-Exclusive Bonuses\",\n        purpose: \"Highlight any bonuses or promotions specifically for mobile app users.\",\n      },\n      {\n        name: \"Comparison with Mobile Website\",\n        purpose: \"Briefly explain the benefits of using the app versus the mobile-responsive website, if applicable.\",\n      },\n    ],\n  },\n  \"VIP / Loyalty Program\": {\n    name: \"VIP / Loyalty Program Page\",\n    suggestedSections: [\n      { name: \"VIP Program Headline\", purpose: \"H1: 'Exclusive VIP & Loyalty Rewards Program'.\" },\n      {\n        name: \"Program Overview & Benefits\",\n        purpose: \"Introduce the VIP/Loyalty program and its main advantages for players.\",\n      },\n      {\n        name: \"Tier Structure Explained\",\n        purpose:\n          \"Detail the different VIP levels or loyalty tiers, including how to achieve them and the specific benefits of each tier (e.g., points system, cashback, exclusive bonuses, personal manager).\",\n      },\n      {\n        name: \"How to Qualify / Join\",\n        purpose: \"Clear explanation of the criteria for joining the program or progressing through tiers.\",\n      },\n      {\n        name: \"Exclusive Perks Showcase\",\n        purpose:\n          \"Highlight unique benefits like dedicated support, faster withdrawals, birthday gifts, exclusive tournaments, or luxury rewards.\",\n      },\n      { name: \"VIP Member FAQs\", purpose: \"Address common questions about the VIP program, points, and rewards.\" },\n    ],\n  },\n  News: {\n    name: \"News Page\",\n    suggestedSections: [\n      {\n        name: \"News Headline\",\n        purpose: \"H1: 'Latest iGaming News & Industry Updates' or '[CasinoName] News'.\",\n        seoNote: \"Fresh content signal; important for topical authority.\",\n      },\n      {\n        name: \"Latest News Feed\",\n        purpose: \"Chronological or categorized feed of news articles, press releases, or announcements.\",\n      },\n      { name: \"Featured News Articles\", purpose: \"Highlight important or trending news items.\" },\n      {\n        name: \"Industry Analysis & Commentary\",\n        purpose: \"Section for expert opinions, market analysis, or commentary on gaming trends (if applicable).\",\n      },\n      {\n        name: \"Event Coverage Recaps\",\n        purpose: \"Summaries or reports from trade shows, conferences, or significant industry events.\",\n      },\n      { name: \"Search and Filter Options\", purpose: \"Allow users to search news articles or filter by category/date.\" },\n      {\n        name: \"Newsletter Signup for Updates\",\n        purpose: \"Encourage users to subscribe for the latest news and updates via email.\",\n      },\n    ],\n  },\n  Glossary: {\n    name: \"Glossary Page\",\n    suggestedSections: [\n      { name: \"Glossary Headline\", purpose: \"H1: 'Casino & Gambling Terms Glossary'.\" },\n      { name: \"Alphabetical Navigation\", purpose: \"A-Z links for easy navigation.\" },\n      { name: \"Term & Definition Blocks\", purpose: \"Clear definitions for common casino, betting, and gaming terms.\" },\n      { name: \"Search Functionality\", purpose: \"Allow users to search for specific terms.\" },\n    ],\n  },\n};\n\n// Helper function to get available pages (excluding Home which is always included)\nexport function getAvailablePages(): string[] {\n  return Object.keys(pageLibrary).filter(key => key !== 'Home');\n}\n\n// Helper function to get page template by key\nexport function getPageTemplate(pageKey: string): PageTemplate | null {\n  return pageLibrary[pageKey] || null;\n}\n\n// Helper function to get all page templates\nexport function getAllPageTemplates(): PageTemplate[] {\n  return Object.values(pageLibrary);\n} "],"names":[],"mappings":"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A;gBACE,MAAM;gBACN,SAAS;YACX;YACA;gBACE,MAAM;gBACN,SAAS;YACX;YACA;gBACE,MAAM;gBACN,SAAS;YACX;YACA;gBAAE,MAAM;gBAAsB,SAAS;YAAqE;YAC5G;gBAAE,MAAM;gBAAwB,SAAS;YAAwD;YACjG;gBACE,MAAM;gBACN,SAAS;YACX;YACA;gBACE,MAAM;gBACN,SAAS;YACX;SACD;IACH;IACA,WAAW;QACT,MAAM;QACN,mBAAmB;YACjB;gBACE,MAAM;gBACN,SAAS;gBACT,SAAS;YACX;YACA;gBACE,MAAM;gBACN,SAAS;YACX;YACA;gBACE,MAAM;gBACN,SACE;YACJ;YACA;gBACE,MAAM;gBACN,SAAS;YACX;YACA;gBACE,MAAM;gBACN,SACE;YACJ;SACD;IACH;IACA,mBAAmB;QACjB,MAAM;QACN,mBAAmB;YACjB;gBACE,MAAM;gBACN,SAAS;gBACT,SAAS;YACX;YACA;gBACE,MAAM;gBACN,SACE;YACJ;YACA;gBACE,MAAM;gBACN,SACE;YACJ;YACA;gBACE,MAAM;gBACN,SACE;YACJ;YACA;gBACE,MAAM;gBACN,SAAS;YACX;YACA;gBACE,MAAM;gBACN,SAAS;YACX;SACD;IACH;IACA,wBAAwB;QACtB,MAAM;QACN,mBAAmB;YACjB;gBAAE,MAAM;gBAAwB,SAAS;YAAmD;YAC5F;gBACE,MAAM;gBACN,SACE;YACJ;YACA;gBACE,MAAM;gBACN,SACE;YACJ;YACA;gBAAE,MAAM;gBAAwB,SAAS;YAA4D;YACrG;gBACE,MAAM;gBACN,SAAS;YACX;YACA;gBACE,MAAM;gBACN,SAAS;YACX;SACD;IACH;IACA,eAAe;QACb,MAAM;QACN,mBAAmB;YACjB;gBACE,MAAM;gBACN,SAAS;gBACT,SAAS;YACX;YACA;gBACE,MAAM;gBACN,SACE;YACJ;YACA;gBACE,MAAM;gBACN,SAAS;YACX;YACA;gBACE,MAAM;gBACN,SAAS;YACX;YACA;gBACE,MAAM;gBACN,SAAS;YACX;YACA;gBACE,MAAM;gBACN,SAAS;YACX;YACA;gBACE,MAAM;gBACN,SAAS;YACX;SACD;IACH;IACA,yBAAyB;QACvB,MAAM;QACN,mBAAmB;YACjB;gBAAE,MAAM;gBAAwB,SAAS;YAAiD;YAC1F;gBACE,MAAM;gBACN,SAAS;YACX;YACA;gBACE,MAAM;gBACN,SACE;YACJ;YACA;gBACE,MAAM;gBACN,SAAS;YACX;YACA;gBACE,MAAM;gBACN,SACE;YACJ;YACA;gBAAE,MAAM;gBAAmB,SAAS;YAAuE;SAC5G;IACH;IACA,MAAM;QACJ,MAAM;QACN,mBAAmB;YACjB;gBACE,MAAM;gBACN,SAAS;gBACT,SAAS;YACX;YACA;gBACE,MAAM;gBACN,SAAS;YACX;YACA;gBAAE,MAAM;gBAA0B,SAAS;YAA8C;YACzF;gBACE,MAAM;gBACN,SAAS;YACX;YACA;gBACE,MAAM;gBACN,SAAS;YACX;YACA;gBAAE,MAAM;gBAA6B,SAAS;YAAkE;YAChH;gBACE,MAAM;gBACN,SAAS;YACX;SACD;IACH;IACA,UAAU;QACR,MAAM;QACN,mBAAmB;YACjB;gBAAE,MAAM;gBAAqB,SAAS;YAA0C;YAChF;gBAAE,MAAM;gBAA2B,SAAS;YAAiC;YAC7E;gBAAE,MAAM;gBAA4B,SAAS;YAAkE;YAC/G;gBAAE,MAAM;gBAAwB,SAAS;YAA4C;SACtF;IACH;AACF;AAGO,SAAS;IACd,OAAO,OAAO,IAAI,CAAC,aAAa,MAAM,CAAC,CAAA,MAAO,QAAQ;AACxD;AAGO,SAAS,gBAAgB,OAAe;IAC7C,OAAO,WAAW,CAAC,QAAQ,IAAI;AACjC;AAGO,SAAS;IACd,OAAO,OAAO,MAAM,CAAC;AACvB","debugId":null}},
    {"offset": {"line": 909, "column": 0}, "map": {"version":3,"sources":["file:///Users/vkyrychenko/Desktop/aiseo/src/app/web-ui/main-page/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { createProject, updateProject, getProjectById, createProjectFile, createAgentTask } from '@/lib/db/queries';\nimport { pageLibrary, getAvailablePages, getPageTemplate, type PageTemplate, type Section } from '@/lib/page-library';\n// Remove server-side import\n\nconst countries = [\n  { name: 'United States', code: 'US' },\n  { name: 'United Kingdom', code: 'UK' },\n  { name: 'Canada', code: 'CA' },\n  { name: 'Australia', code: 'AU' },\n  { name: 'Germany', code: 'DE' },\n  { name: 'France', code: 'FR' },\n  { name: 'Spain', code: 'ES' },\n  { name: 'Italy', code: 'IT' },\n  { name: 'Sweden', code: 'SE' },\n  { name: 'Norway', code: 'NO' },\n  // Add more as needed\n];\n\nconst languages = [\n  { name: 'English', code: 'EN' },\n  { name: 'Spanish', code: 'ES' },\n  { name: 'French', code: 'FR' },\n  { name: 'German', code: 'DE' },\n  { name: 'Italian', code: 'IT' },\n  { name: 'Swedish', code: 'SV' },\n  { name: 'Norwegian', code: 'NO' },\n  // Add more as needed\n];\n\nconst siteTypes = [\n  { name: 'Single Page', value: 'single-page' },\n  { name: 'Multi Page', value: 'multi-page' },\n];\n\n\n// Client-side function to call agent API\nconst executeAgentAPI = async (agentType: string, userInput: any) => {\n  const response = await fetch('/api/claude/agent', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      agentType,\n      userInput\n    })\n  });\n\n  if (!response.ok) {\n    throw new Error(`HTTP error! status: ${response.status}`);\n  }\n\n  return await response.json();\n};\n\nconst MainPage: React.FC = () => {\n  const [currentStep, setCurrentStep] = useState<'initial' | 'site-type' | 'structure' | 'claude-response'>('initial');\n  const [showMessage, setShowMessage] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [createdProjectId, setCreatedProjectId] = useState<string | null>(null);\n  const [claudeResponse, setClaudeResponse] = useState<string | null>(null);\n  const [filledPrompt, setFilledPrompt] = useState<string | null>(null);\n  const [researchResults, setResearchResults] = useState<any | null>(null);\n  const [researchStatus, setResearchStatus] = useState<string>('idle');\n  const [researchProgress, setResearchProgress] = useState<number>(0);\n  const [researchStep, setResearchStep] = useState<string>('');\n\n  // Client-side function to start background research\n  const startBackgroundResearch = async (projectId: string, projectName: string, brandName: string, targetCountry: string, targetLanguage: string) => {\n    try {\n      const response = await fetch('/api/researcher/start', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          projectId,\n          projectName,\n          brandName,\n          targetCountry,\n          targetLanguage\n        })\n      });\n\n      if (!response.ok) {\n        console.error('Failed to start background research:', response.status);\n      } else {\n        console.log('Background research started successfully');\n        setResearchStatus('started');\n      }\n    } catch (error) {\n      console.error('Error starting background research:', error);\n    }\n  };\n\n  // Client-side function to check research status\n  const checkResearchStatus = async (projectId: string) => {\n    try {\n      const response = await fetch(`/api/researcher/start?projectId=${projectId}`);\n      if (response.ok) {\n        const data = await response.json();\n        \n        // Update progress and step information\n        if (data.status) {\n          setResearchProgress(data.status.progress || 0);\n          setResearchStep(getStepDescription(data.status.progress || 0));\n        }\n        \n        // Check for completion\n        if (data.isCompleted && data.results) {\n          setResearchResults(data.results);\n          setResearchStatus('completed');\n          setResearchProgress(100);\n          setResearchStep('Research completed successfully!');\n          return data.results;\n        } else if (data.status?.status === 'completed' && data.results) {\n          setResearchResults(data.results);\n          setResearchStatus('completed');\n          setResearchProgress(100);\n          setResearchStep('Research completed successfully!');\n          return data.results;\n        } else if (data.status?.status === 'in_progress') {\n          setResearchStatus('in_progress');\n        } else if (data.status?.status === 'completed') {\n          setResearchStatus('completed');\n          setResearchProgress(100);\n          if (data.results) {\n            setResearchResults(data.results);\n          }\n        } else if (data.status?.status === 'failed') {\n          setResearchStatus('failed');\n          setResearchStep(data.status.error || 'Research failed');\n        }\n      }\n    } catch (error) {\n      console.error('Error checking research status:', error);\n    }\n    return null;\n  };\n\n  // Helper function to get step description based on progress\n  const getStepDescription = (progress: number): string => {\n    if (progress === 0) return 'Initializing research...';\n    if (progress <= 10) return 'Starting research task...';\n    if (progress <= 30) return 'Preparing research prompt...';\n    if (progress <= 50) return 'Executing ChatGPT API call...';\n    if (progress <= 70) return 'Processing research results...';\n    if (progress <= 90) return 'Saving results to database...';\n    if (progress < 100) return 'Finalizing research...';\n    return 'Research completed!';\n  };\n\n  // Check research status periodically\n  useEffect(() => {\n    let interval: NodeJS.Timeout;\n    \n    if (createdProjectId && (researchStatus === 'started' || researchStatus === 'in_progress')) {\n      interval = setInterval(async () => {\n        await checkResearchStatus(createdProjectId);\n      }, 2000); // Check every 2 seconds (faster)\n    }\n    \n    return () => {\n      if (interval) {\n        clearInterval(interval);\n      }\n    };\n  }, [createdProjectId, researchStatus]);\n  const [formData, setFormData] = useState({\n    brand_name: '',\n    target_country: '',\n    target_language: ''\n  });\n  const [siteTypeData, setSiteTypeData] = useState({\n    site_type: ''\n  });\n  const [structureData, setStructureData] = useState({\n    selectedPages: [] as string[],\n    pageSections: {} as Record<string, string[]> // pageKey -> selected section names\n  });\n\n  // Function to generate project name\n  const generateProjectName = (brandName: string, country: string, language: string): string => {\n    const countryCode = countries.find(c => c.name === country)?.code || 'XX';\n    const languageCode = languages.find(l => l.name === language)?.code || 'XX';\n    const date = new Date().toISOString().split('T')[0].replace(/-/g, ''); // YYYYMMDD format\n    \n    // Clean brand name (remove special characters, replace spaces with hyphens)\n    const cleanBrandName = brandName\n      .toLowerCase()\n      .replace(/[^a-z0-9\\s]/g, '')\n      .replace(/\\s+/g, '-')\n      .substring(0, 20); // Limit length\n    \n    return `${cleanBrandName}-${countryCode}-${languageCode}-${date}`;\n  };\n\n  // Function to parse Claude's response and create project files\n  const parseAndCreateProjectFiles = async (projectId: string, claudeResponse: string) => {\n    try {\n      // Try to parse Claude's response as JSON\n      let fileStructure: any[];\n      \n      try {\n        // Extract JSON from Claude's response (it might be wrapped in markdown)\n        const jsonMatch = claudeResponse.match(/```json\\n([\\s\\S]*?)\\n```/) || \n                         claudeResponse.match(/```\\n([\\s\\S]*?)\\n```/) ||\n                         claudeResponse.match(/\\[[\\s\\S]*\\]/);\n        \n        if (jsonMatch) {\n          fileStructure = JSON.parse(jsonMatch[1] || jsonMatch[0]);\n        } else {\n          // If no JSON found, try to parse the entire response\n          fileStructure = JSON.parse(claudeResponse);\n        }\n      } catch (parseError) {\n        console.error('Failed to parse Claude response as JSON:', parseError);\n        throw new Error('Claude response is not valid JSON');\n      }\n\n      // Validate that we have an array\n      if (!Array.isArray(fileStructure)) {\n        throw new Error('Claude response is not an array of files');\n      }\n\n      // Create project files in database\n      const createdFiles = [];\n      for (const file of fileStructure) {\n        try {\n          const projectFile = await createProjectFile({\n            project_id: projectId,\n            path: file.path || 'unknown-path',\n            type: file.type || 'page',\n            content: file.description || '',\n            version: 1,\n            blocks: file,\n            author: 'new-project-agent'\n          });\n          \n          if (projectFile) {\n            createdFiles.push(projectFile);\n          }\n        } catch (fileError) {\n          console.error('Failed to create project file:', file.path, fileError);\n        }\n      }\n\n      return createdFiles;\n    } catch (error) {\n      console.error('Error parsing Claude response:', error);\n      throw error;\n    }\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleSiteTypeChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const { name, value } = e.target;\n    setSiteTypeData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handlePageSelection = (pageKey: string, isSelected: boolean) => {\n    setStructureData(prev => {\n      const newSelectedPages = isSelected \n        ? [...prev.selectedPages, pageKey]\n        : prev.selectedPages.filter(p => p !== pageKey);\n      \n      // When selecting a page, initialize all its sections as selected by default\n      const newPageSections = { ...prev.pageSections };\n      if (isSelected && !newPageSections[pageKey]) {\n        const pageTemplate = pageLibrary[pageKey];\n        if (pageTemplate) {\n          newPageSections[pageKey] = pageTemplate.suggestedSections.map(section => section.name);\n        }\n      }\n      \n      return {\n        ...prev,\n        selectedPages: newSelectedPages,\n        pageSections: newPageSections\n      };\n    });\n  };\n\n  const handleSectionSelection = (pageKey: string, sectionName: string, isSelected: boolean) => {\n    setStructureData(prev => {\n      const currentSections = prev.pageSections[pageKey] || [];\n      const newSections = isSelected\n        ? [...currentSections, sectionName]\n        : currentSections.filter(s => s !== sectionName);\n      \n      return {\n        ...prev,\n        pageSections: {\n          ...prev.pageSections,\n          [pageKey]: newSections\n        }\n      };\n    });\n  };\n\n  const handleStartOver = () => {\n    // Reset all state\n    setFormData({\n      brand_name: '',\n      target_country: '',\n      target_language: ''\n    });\n    setSiteTypeData({\n      site_type: ''\n    });\n    setStructureData({\n      selectedPages: [],\n      pageSections: {}\n    });\n    setClaudeResponse(null);\n    setFilledPrompt(null);\n    setResearchResults(null);\n    setResearchStatus('idle');\n    setResearchProgress(0);\n    setResearchStep('');\n    setCurrentStep('initial');\n    setCreatedProjectId(null);\n    setShowMessage(false);\n  };\n\n  const handleStructureSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsLoading(true);\n\n    try {\n      if (!createdProjectId) {\n        throw new Error('No project ID found');\n      }\n\n      // Get current project to preserve existing data\n      const currentProject = await getProjectById(createdProjectId);\n      if (!currentProject) {\n        throw new Error('Project not found');\n      }\n\n      // Always include Home as the first page\n      const selectedPages = ['Home', ...structureData.selectedPages.filter(p => p !== 'Home')];\n      // For each selected page, ensure selected sections are present\n      const pageSections: Record<string, string[]> = {};\n      selectedPages.forEach(pageKey => {\n        const selected = structureData.pageSections[pageKey];\n        if (selected && selected.length > 0) {\n          // If sections are explicitly set, use them\n          pageSections[pageKey] = selected;\n        } else {\n          // If no sections in state, default to all sections for this page\n          const pageTemplate = pageLibrary[pageKey];\n          if (pageTemplate) {\n            pageSections[pageKey] = pageTemplate.suggestedSections.map(section => section.name);\n          } else {\n            pageSections[pageKey] = [];\n          }\n        }\n      });\n\n      // Prepare structure data\n      const structureInfo = {\n        selectedPages,\n        pageSections,\n        totalPages: selectedPages.length,\n        structureCompletedAt: new Date().toISOString()\n      };\n\n      // Reorganize user_input with project info at top and structure at bottom\n      const updatedUserInput = {\n        brand_name: currentProject.user_input?.brand_name || '',\n        target_country: currentProject.user_input?.target_country || '',\n        target_language: currentProject.user_input?.target_language || '',\n        site_type: currentProject.user_input?.site_type || null,\n        site_type_selected_at: currentProject.user_input?.site_type_selected_at || null,\n        structure: structureInfo\n      };\n\n      // Update project with structure data in user_input\n      const updateData = {\n        state: 'agent-processing',\n        user_input: updatedUserInput\n      };\n\n      const result = await updateProject(createdProjectId, updateData);\n      \n      if (result) {\n        // Call the new_project_agent with complete structure data\n        const agentUserInput = {\n          brand_name: updatedUserInput.brand_name,\n          target_country: updatedUserInput.target_country,\n          target_language: updatedUserInput.target_language,\n          site_type: updatedUserInput.site_type,\n          structure: updatedUserInput.structure\n        };\n\n        const agentResult = await executeAgentAPI('new-project', agentUserInput);\n\n        if (agentResult.success && agentResult.response) {\n          // Log the agent task\n          await createAgentTask({\n            project_id: createdProjectId,\n            agent: 'new-project',\n            task: 'Generate project file structure',\n            input: agentUserInput,\n            output: { response: agentResult.response },\n            status: 'success',\n            logs: agentResult.metadata\n          });\n\n          // Parse Claude's response and create project files\n          try {\n            const createdFiles = await parseAndCreateProjectFiles(createdProjectId, agentResult.response);\n            console.log('Created project files:', createdFiles);\n          } catch (parseError) {\n            console.error('Failed to parse Claude response:', parseError);\n          }\n\n          // Set Claude response and filled prompt to show on next step\n          setClaudeResponse(agentResult.response);\n          setFilledPrompt(agentResult.filledPrompt || null);\n          setCurrentStep('claude-response');\n          setShowMessage(true);\n          \n          // Update project state\n          await updateProject(createdProjectId, {\n            state: 'structure-generated',\n            user_input: updatedUserInput\n          });\n\n          // Hide message after 3 seconds\n          setTimeout(() => {\n            setShowMessage(false);\n          }, 3000);\n        } else {\n          // Log failed agent task\n          console.error('Agent execution failed:', agentResult);\n          \n          await createAgentTask({\n            project_id: createdProjectId,\n            agent: 'new-project',\n            task: 'Generate project file structure',\n            input: agentUserInput,\n            output: null,\n            status: 'error',\n            error: agentResult.error || 'Unknown error'\n          });\n\n          alert(`Failed to generate project structure with Claude: ${agentResult.error || 'Unknown error'}`);\n        }\n      } else {\n        alert('Failed to update project. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error submitting structure:', error);\n      alert(`An error occurred: ${error instanceof Error ? error.message : 'Unknown error'}`);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleInitialSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsLoading(true);\n\n    try {\n      // Generate project name\n      const projectName = generateProjectName(\n        formData.brand_name,\n        formData.target_country,\n        formData.target_language\n      );\n\n      // Create project with the reorganized structure\n      const projectData = {\n        status: 'created' as const,\n        state: 'site-type-selection',\n        user_input: {\n          brand_name: formData.brand_name,\n          target_country: formData.target_country,\n          target_language: formData.target_language,\n          site_type: null,\n          site_type_selected_at: null,\n          structure: null\n        },\n        meta: {\n          form_version: '1.0',\n          submitted_at: new Date().toISOString(),\n          project_name: projectName\n        },\n        output_refs: null\n      };\n\n      const result = await createProject(projectData);\n      \n      if (result) {\n        setCreatedProjectId(result.id);\n        \n        // Start background research after step 1 completion\n        await startBackgroundResearch(\n          result.id,\n          projectName,\n          formData.brand_name,\n          formData.target_country,\n          formData.target_language\n        );\n        \n        setCurrentStep('site-type');\n        setShowMessage(true);\n        \n        // Hide message after 3 seconds\n        setTimeout(() => {\n          setShowMessage(false);\n        }, 3000);\n      } else {\n        alert('Failed to save project. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error submitting form:', error);\n      alert('An error occurred. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleSiteTypeSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsLoading(true);\n\n    try {\n      if (!createdProjectId) {\n        throw new Error('No project ID found');\n      }\n\n      // First, get the current project to preserve existing data\n      const currentProject = await getProjectById(createdProjectId);\n      if (!currentProject) {\n        throw new Error('Project not found');\n      }\n\n      // Update user_input with site type, maintaining organized structure\n      const updatedUserInput = {\n        brand_name: currentProject.user_input?.brand_name || '',\n        target_country: currentProject.user_input?.target_country || '',\n        target_language: currentProject.user_input?.target_language || '',\n        site_type: siteTypeData.site_type,\n        site_type_selected_at: new Date().toISOString(),\n        structure: currentProject.user_input?.structure || null\n      };\n\n      // Update project with site type in user_input\n      const updateData = {\n        state: 'structure-selection',\n        user_input: updatedUserInput\n      };\n\n      const result = await updateProject(createdProjectId, updateData);\n      \n      if (result) {\n        // Initialize Home page sections when moving to structure step\n        const homePage = pageLibrary['Home'];\n        if (homePage && !structureData.pageSections['Home']) {\n          setStructureData(prev => ({\n            ...prev,\n            pageSections: {\n              ...prev.pageSections,\n              'Home': homePage.suggestedSections.map(section => section.name)\n            }\n          }));\n        }\n        setCurrentStep('structure');\n      } else {\n        alert('Failed to update project. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error submitting site type:', error);\n      alert('An error occurred. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const renderInitialForm = () => (\n    <form onSubmit={handleInitialSubmit} className=\"w-full max-w-sm space-y-6 bg-slate-50 p-8 rounded shadow\">\n      <div>\n        <label htmlFor=\"brand_name\" className=\"block text-sm font-medium text-slate-700 mb-1\">\n          Casino Brand Name\n        </label>\n        <input\n          id=\"brand_name\"\n          name=\"brand_name\"\n          type=\"text\"\n          required\n          value={formData.brand_name}\n          onChange={handleInputChange}\n          className=\"block w-full px-4 py-2 border border-slate-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          placeholder=\"Enter casino brand name\"\n        />\n              </div>\n      <div>\n        <label htmlFor=\"target_country\" className=\"block text-sm font-medium text-slate-700 mb-1\">\n          Target Country\n        </label>\n        <select\n          id=\"target_country\"\n          name=\"target_country\"\n          required\n          value={formData.target_country}\n          onChange={handleInputChange}\n          className=\"block w-full px-4 py-2 border border-slate-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\n        >\n          <option value=\"\">\n            Select a country\n          </option>\n          {countries.map((country) => (\n            <option key={country.code} value={country.name}>\n              {country.name}\n            </option>\n          ))}\n        </select>\n            </div>\n      <div>\n        <label htmlFor=\"target_language\" className=\"block text-sm font-medium text-slate-700 mb-1\">\n          Target Language\n        </label>\n        <select\n          id=\"target_language\"\n          name=\"target_language\"\n          required\n          value={formData.target_language}\n          onChange={handleInputChange}\n          className=\"block w-full px-4 py-2 border border-slate-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\n        >\n          <option value=\"\">\n            Select a language\n          </option>\n          {languages.map((language) => (\n            <option key={language.code} value={language.name}>\n              {language.name}\n            </option>\n          ))}\n        </select>\n              </div>\n      <button\n        type=\"submit\"\n        disabled={isLoading}\n        className=\"w-full bg-blue-600 text-white py-2 rounded font-semibold hover:bg-blue-700 transition-colors disabled:bg-blue-400 disabled:cursor-not-allowed\"\n      >\n        {isLoading ? 'Creating Project...' : 'Submit'}\n      </button>\n    </form>\n  );\n\n  const renderSiteTypeForm = () => (\n    <div className=\"w-full max-w-sm space-y-6\">\n      {/* Research Status */}\n      {renderResearchStatus()}\n      \n      <form onSubmit={handleSiteTypeSubmit} className=\"w-full space-y-6 bg-slate-50 p-8 rounded shadow\">\n        <div className=\"text-center mb-6\">\n          <h2 className=\"text-xl font-semibold text-slate-800 mb-2\">\n            Choose Site Type\n          </h2>\n                <p className=\"text-slate-600\">\n            Select the type of website you want to generate\n                </p>\n              </div>\n\n      <div>\n        <label htmlFor=\"site_type\" className=\"block text-sm font-medium text-slate-700 mb-1\">\n          Site Type\n        </label>\n        <select\n          id=\"site_type\"\n          name=\"site_type\"\n          required\n          value={siteTypeData.site_type}\n          onChange={handleSiteTypeChange}\n          className=\"block w-full px-4 py-2 border border-slate-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\n        >\n          <option value=\"\">\n            Select site type\n          </option>\n          {siteTypes.map((type) => (\n            <option key={type.value} value={type.value}>\n              {type.name}\n            </option>\n          ))}\n        </select>\n              </div>\n      \n      <button\n        type=\"submit\"\n        disabled={isLoading}\n        className=\"w-full bg-blue-600 text-white py-2 rounded font-semibold hover:bg-blue-700 transition-colors disabled:bg-blue-400 disabled:cursor-not-allowed\"\n      >\n        {isLoading ? 'Updating Project...' : 'Continue'}\n      </button>\n      </form>\n    </div>\n  );\n\n  const renderStructureForm = () => {\n    const isSinglePage = siteTypeData.site_type === 'single-page';\n    const availablePages = getAvailablePages();\n    const homePage = pageLibrary['Home'];\n\n    return (\n      <div className=\"w-full max-w-4xl space-y-6\">\n        {/* Research Status */}\n        {renderResearchStatus()}\n        \n        <form onSubmit={handleStructureSubmit} className=\"w-full space-y-6 bg-slate-50 p-8 rounded shadow\">\n        <div className=\"text-center mb-6\">\n          <h2 className=\"text-xl font-semibold text-slate-800 mb-2\">\n            {isSinglePage ? 'Choose Home Page Structure' : 'Choose Pages & Structure'}\n          </h2>\n              <p className=\"text-slate-600\">\n            {isSinglePage \n              ? 'Select which sections to include in your single-page website'\n              : 'Select additional pages and their sections for your multi-page website'\n            }\n              </p>\n            </div>\n\n        {/* Home Page Section (always included) */}\n        <div className=\"border border-slate-200 rounded-lg p-6 bg-white\">\n          <h3 className=\"text-lg font-semibold text-slate-800 mb-4 flex items-center\">\n            <span className=\"bg-green-100 text-green-800 px-2 py-1 rounded text-sm mr-2\">Always Included</span>\n            {homePage.name}\n          </h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n            {homePage.suggestedSections.map((section) => {\n              const isSelected = structureData.pageSections['Home']?.includes(section.name) ?? true;\n              return (\n                <div \n                  key={section.name} \n                  className={`p-4 border-2 rounded-lg cursor-pointer transition-all duration-200 hover:shadow-md ${\n                    isSelected \n                      ? 'border-blue-500 bg-blue-50' \n                      : 'border-slate-200 bg-slate-50 hover:border-slate-300'\n                  }`}\n                  onClick={() => handleSectionSelection('Home', section.name, !isSelected)}\n                >\n                  <div className=\"flex items-start space-x-3\">\n                    <input\n                      type=\"checkbox\"\n                      id={`home-${section.name}`}\n                      checked={isSelected}\n                      onChange={(e) => handleSectionSelection('Home', section.name, e.target.checked)}\n                      className=\"mt-1 h-4 w-4 text-blue-600 focus:ring-blue-500 border-slate-300 rounded\"\n                      onClick={(e) => e.stopPropagation()}\n                    />\n                    <div className=\"flex-1\">\n                      <label htmlFor={`home-${section.name}`} className=\"text-sm font-semibold text-slate-800 cursor-pointer block\">\n                        {section.name}\n                      </label>\n                      <p className=\"text-xs text-slate-600 mt-2 leading-relaxed\">{section.purpose}</p>\n                      {section.seoNote && (\n                        <div className=\"mt-2 p-2 bg-blue-100 rounded text-xs text-blue-800 font-medium\">\n                          💡 {section.seoNote}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n\n        {/* Additional Pages (for multi-page only) */}\n        {!isSinglePage && (\n          <div className=\"border border-slate-200 rounded-lg p-6 bg-white\">\n            <h3 className=\"text-lg font-semibold text-slate-800 mb-4\">Additional Pages</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n              {availablePages.map((pageKey) => {\n                const pageTemplate = pageLibrary[pageKey];\n                const isSelected = structureData.selectedPages.includes(pageKey);\n                \n                return (\n                  <div key={pageKey} className=\"border border-slate-200 rounded-lg p-4\">\n                    <div \n                      className={`p-3 border-2 rounded-lg cursor-pointer transition-all duration-200 hover:shadow-md mb-3 ${\n                        isSelected \n                          ? 'border-blue-500 bg-blue-50' \n                          : 'border-slate-200 bg-slate-50 hover:border-slate-300'\n                      }`}\n                      onClick={() => handlePageSelection(pageKey, !isSelected)}\n                    >\n                      <div className=\"flex items-start space-x-3\">\n                        <input\n                          type=\"checkbox\"\n                          id={`page-${pageKey}`}\n                          checked={isSelected}\n                          onChange={(e) => handlePageSelection(pageKey, e.target.checked)}\n                          className=\"mt-1 h-4 w-4 text-blue-600 focus:ring-blue-500 border-slate-300 rounded\"\n                          onClick={(e) => e.stopPropagation()}\n                        />\n                        <div className=\"flex-1\">\n                          <label htmlFor={`page-${pageKey}`} className=\"text-sm font-semibold text-slate-800 cursor-pointer block\">\n                            {pageTemplate.name}\n                          </label>\n                        </div>\n                      </div>\n                    </div>\n                    \n                    {/* Show sections only if page is selected */}\n                    {isSelected && (\n                      <div className=\"space-y-2\">\n                        <p className=\"text-xs text-slate-500 font-medium mb-3\">Select sections:</p>\n                        <div className=\"grid grid-cols-1 gap-2\">\n                          {pageTemplate.suggestedSections.map((section) => {\n                            const isSectionSelected = structureData.pageSections[pageKey]?.includes(section.name) ?? true;\n                            return (\n                              <div \n                                key={section.name} \n                                className={`p-3 border-2 rounded-lg cursor-pointer transition-all duration-200 hover:shadow-sm ${\n                                  isSectionSelected \n                                    ? 'border-green-500 bg-green-50' \n                                    : 'border-slate-200 bg-slate-50 hover:border-slate-300'\n                                }`}\n                                onClick={() => handleSectionSelection(pageKey, section.name, !isSectionSelected)}\n                              >\n                                <div className=\"flex items-start space-x-2\">\n                                  <input\n                                    type=\"checkbox\"\n                                    id={`${pageKey}-${section.name}`}\n                                    checked={isSectionSelected}\n                                    onChange={(e) => handleSectionSelection(pageKey, section.name, e.target.checked)}\n                                    className=\"mt-0.5 h-3 w-3 text-green-600 focus:ring-green-500 border-slate-300 rounded\"\n                                    onClick={(e) => e.stopPropagation()}\n                                  />\n                                  <div className=\"flex-1\">\n                                    <label htmlFor={`${pageKey}-${section.name}`} className=\"text-xs font-medium text-slate-700 cursor-pointer block\">\n                                      {section.name}\n                                    </label>\n                                    <p className=\"text-xs text-slate-500 mt-1 leading-relaxed\">{section.purpose}</p>\n                                    {section.seoNote && (\n                                      <div className=\"mt-1 p-1 bg-blue-100 rounded text-xs text-blue-800\">\n                                        💡 {section.seoNote}\n                                      </div>\n                                    )}\n                                  </div>\n                                </div>\n                              </div>\n                            );\n                          })}\n                        </div>\n                      </div>\n                    )}\n              </div>\n                );\n              })}\n            </div>\n          </div>\n        )}\n\n        <div className=\"flex justify-between items-center pt-4\">\n          <button\n            type=\"button\"\n            onClick={() => setCurrentStep('site-type')}\n            className=\"px-4 py-2 text-slate-600 border border-slate-300 rounded hover:bg-slate-50 transition-colors\"\n          >\n            Back\n          </button>\n          <button\n            type=\"submit\"\n            disabled={isLoading}\n            className=\"px-6 py-2 bg-blue-600 text-white rounded font-semibold hover:bg-blue-700 transition-colors disabled:bg-blue-400 disabled:cursor-not-allowed\"\n          >\n    {isLoading ? 'Generating with Claude...' : 'Generate Project Structure'}\n          </button>\n        </div>\n      </form>\n      </div>\n    );\n  };\n\n  const renderResearchResults = () => {\n    if (!researchResults) return null;\n\n    return (\n      <div className=\"w-full max-w-4xl bg-white rounded-lg p-6 border mb-6\">\n        <div className=\"flex items-center justify-between mb-6\">\n          <h3 className=\"text-lg font-semibold text-slate-800 flex items-center\">\n            <span className=\"bg-purple-100 text-purple-800 px-2 py-1 rounded text-sm mr-2\">Research</span>\n            🔍 Casino Research Results\n          </h3>\n          <div className=\"text-right\">\n            <div className=\"text-sm text-slate-500\">\n              Search Time: {researchResults.metadata?.searchTime ? `${Math.round(researchResults.metadata.searchTime / 1000)}s` : 'N/A'}\n            </div>\n            <div className=\"text-xs text-slate-400\">\n              {researchResults.metadata?.note && `(${researchResults.metadata.note})`}\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          {researchResults.bonuses?.length > 0 && (\n            <div className=\"bg-blue-50 rounded-lg p-4 border border-blue-200\">\n              <div className=\"flex items-center justify-between mb-3\">\n                <h4 className=\"font-semibold text-blue-800 flex items-center\">\n                  💰 Bonuses ({researchResults.bonuses.length})\n                </h4>\n                <div className=\"text-xs text-blue-600 bg-blue-100 px-2 py-1 rounded\">\n                  Found\n                </div>\n              </div>\n              <ul className=\"text-sm text-blue-700 space-y-1\">\n                {researchResults.bonuses.map((bonus: string, index: number) => (\n                  <li key={index} className=\"flex items-start\">\n                    <span className=\"text-blue-500 mr-2\">•</span>\n                    <span>{bonus}</span>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          )}\n          \n          {researchResults.providers?.length > 0 && (\n            <div className=\"bg-green-50 rounded-lg p-4 border border-green-200\">\n              <div className=\"flex items-center justify-between mb-3\">\n                <h4 className=\"font-semibold text-green-800 flex items-center\">\n                  🎮 Providers ({researchResults.providers.length})\n                </h4>\n                <div className=\"text-xs text-green-600 bg-green-100 px-2 py-1 rounded\">\n                  Found\n                </div>\n              </div>\n              <ul className=\"text-sm text-green-700 space-y-1\">\n                {researchResults.providers.map((provider: string, index: number) => (\n                  <li key={index} className=\"flex items-start\">\n                    <span className=\"text-green-500 mr-2\">•</span>\n                    <span>{provider}</span>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          )}\n          \n          {researchResults.topSlots?.length > 0 && (\n            <div className=\"bg-yellow-50 rounded-lg p-4 border border-yellow-200\">\n              <div className=\"flex items-center justify-between mb-3\">\n                <h4 className=\"font-semibold text-yellow-800 flex items-center\">\n                  🎰 Top Slots ({researchResults.topSlots.length})\n                </h4>\n                <div className=\"text-xs text-yellow-600 bg-yellow-100 px-2 py-1 rounded\">\n                  Found\n                </div>\n              </div>\n              <ul className=\"text-sm text-yellow-700 space-y-1\">\n                {researchResults.topSlots.map((slot: string, index: number) => (\n                  <li key={index} className=\"flex items-start\">\n                    <span className=\"text-yellow-500 mr-2\">•</span>\n                    <span>{slot}</span>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          )}\n          \n          {researchResults.logo && (\n            <div className=\"bg-purple-50 rounded-lg p-4 border border-purple-200\">\n              <div className=\"flex items-center justify-between mb-3\">\n                <h4 className=\"font-semibold text-purple-800 flex items-center\">\n                  🎨 Logo\n                </h4>\n                <div className=\"text-xs text-purple-600 bg-purple-100 px-2 py-1 rounded\">\n                  Found\n                </div>\n              </div>\n              <p className=\"text-sm text-purple-700\">{researchResults.logo}</p>\n            </div>\n          )}\n        </div>\n        \n        <div className=\"mt-6 pt-4 border-t border-slate-200\">\n          <div className=\"flex items-center justify-between text-xs text-slate-500\">\n            <div>\n              Research completed at: {new Date(researchResults.metadata?.timestamp || '').toLocaleString()}\n            </div>\n            <div>\n              Sources checked: {researchResults.metadata?.sourcesChecked?.length || 0} websites\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const renderResearchStatus = () => {\n    if (researchStatus === 'idle') return null;\n\n    return (\n      <div className=\"w-full max-w-4xl bg-white rounded-lg p-6 border mb-6\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <div className=\"flex items-center space-x-3\">\n            <div className={`w-6 h-6 rounded-full flex items-center justify-center ${\n              researchStatus === 'started' ? 'bg-blue-500 animate-pulse' :\n              researchStatus === 'in_progress' ? 'bg-yellow-500 animate-pulse' :\n              researchStatus === 'completed' ? 'bg-green-500' :\n              'bg-red-500'\n            }`}>\n              {researchStatus === 'completed' && (\n                <svg className=\"w-4 h-4 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                </svg>\n              )}\n              {researchStatus === 'failed' && (\n                <svg className=\"w-4 h-4 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              )}\n            </div>\n            <div>\n              <h3 className=\"text-lg font-semibold text-slate-800\">\n                🔍 Casino Research Progress\n              </h3>\n              <p className=\"text-sm text-slate-600\">{researchStep}</p>\n            </div>\n          </div>\n          <div className=\"text-right\">\n            <div className=\"text-2xl font-bold text-slate-800\">{researchProgress}%</div>\n            <div className=\"text-xs text-slate-500\">Complete</div>\n          </div>\n        </div>\n        \n        {/* Progress Bar */}\n        <div className=\"w-full bg-slate-200 rounded-full h-3 mb-4\">\n          <div \n            className={`h-3 rounded-full transition-all duration-500 ease-out ${\n              researchStatus === 'completed' ? 'bg-green-500' :\n              researchStatus === 'failed' ? 'bg-red-500' :\n              'bg-blue-500'\n            }`}\n            style={{ width: `${researchProgress}%` }}\n          ></div>\n        </div>\n        \n        {/* Detailed Status */}\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\">\n          <div className=\"flex items-center space-x-2\">\n            <div className={`w-3 h-3 rounded-full ${\n              researchProgress >= 10 ? 'bg-green-500' : 'bg-slate-300'\n            }`}></div>\n            <span className={researchProgress >= 10 ? 'text-green-700' : 'text-slate-500'}>\n              Task Initialized\n            </span>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <div className={`w-3 h-3 rounded-full ${\n              researchProgress >= 30 ? 'bg-green-500' : 'bg-slate-300'\n            }`}></div>\n            <span className={researchProgress >= 30 ? 'text-green-700' : 'text-slate-500'}>\n              API Call\n            </span>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <div className={`w-3 h-3 rounded-full ${\n              researchProgress >= 70 ? 'bg-green-500' : 'bg-slate-300'\n            }`}></div>\n            <span className={researchProgress >= 70 ? 'text-green-700' : 'text-slate-500'}>\n              Processing\n            </span>\n          </div>\n        </div>\n        \n        {/* Error Display */}\n        {researchStatus === 'failed' && (\n          <div className=\"mt-4 p-3 bg-red-50 border border-red-200 rounded\">\n            <div className=\"flex items-center space-x-2\">\n              <svg className=\"w-4 h-4 text-red-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\" />\n              </svg>\n              <span className=\"text-sm text-red-700 font-medium\">Research Error</span>\n            </div>\n            <p className=\"text-sm text-red-600 mt-1\">{researchStep}</p>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  const renderClaudeResponse = () => (\n    <div className=\"w-full max-w-4xl space-y-6 bg-slate-50 p-8 rounded shadow\">\n      <div className=\"text-center mb-6\">\n        <h2 className=\"text-xl font-semibold text-slate-800 mb-2\">\n          🎉 Project Structure Generated!\n        </h2>\n        <p className=\"text-slate-600\">\n          Claude has analyzed your requirements and generated a complete project structure\n        </p>\n      </div>\n\n      {/* Research Status */}\n      {renderResearchStatus()}\n\n      {/* Research Results */}\n      {renderResearchResults()}\n\n      {filledPrompt && (\n        <div className=\"bg-white rounded-lg p-6 border mb-6\">\n          <h3 className=\"text-lg font-semibold text-slate-800 mb-4 flex items-center\">\n            <span className=\"bg-blue-100 text-blue-800 px-2 py-1 rounded text-sm mr-2\">Input</span>\n            📝 Prompt Sent to Claude\n          </h3>\n          <div className=\"bg-blue-50 rounded p-4 max-h-64 overflow-y-auto border border-blue-200\">\n            <pre className=\"text-sm text-slate-700 whitespace-pre-wrap font-mono leading-relaxed\">\n              {filledPrompt}\n            </pre>\n          </div>\n        </div>\n      )}\n\n      {claudeResponse && (\n        <div className=\"bg-white rounded-lg p-6 border\">\n          <h3 className=\"text-lg font-semibold text-slate-800 mb-4 flex items-center\">\n            <span className=\"bg-green-100 text-green-800 px-2 py-1 rounded text-sm mr-2\">Output</span>\n            🤖 Claude's Response\n          </h3>\n          <div className=\"bg-slate-100 rounded p-4 max-h-96 overflow-y-auto border border-slate-200\">\n            <pre className=\"text-sm text-slate-700 whitespace-pre-wrap font-mono leading-relaxed\">\n              {claudeResponse}\n            </pre>\n          </div>\n        </div>\n      )}\n\n      <div className=\"flex justify-center space-x-4\">\n        <button\n          onClick={handleStartOver}\n          className=\"px-6 py-2 bg-slate-600 text-white rounded font-semibold hover:bg-slate-700 transition-colors\"\n        >\n          Start New Project\n        </button>\n        <button\n          onClick={() => {\n            console.log('Project completed:', createdProjectId);\n            alert('Project structure has been saved to the database!');\n          }}\n          className=\"px-6 py-2 bg-green-600 text-white rounded font-semibold hover:bg-green-700 transition-colors\"\n        >\n          View Project Details\n        </button>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"min-h-screen flex flex-col items-center justify-center bg-white\">\n      <h1 className=\"text-5xl font-bold mb-12 text-center\">SEO GEN</h1>\n      \n      {showMessage && (\n        <div className=\"mb-6 p-4 bg-green-100 border border-green-400 text-green-700 rounded\">\n          {currentStep === 'initial' ? 'Project created successfully!' : \n           currentStep === 'claude-response' ? 'Project structure generated successfully!' : \n           'Project updated successfully!'}\n        </div>\n      )}\n      \n      {currentStep === 'initial' && renderInitialForm()}\n      {currentStep === 'site-type' && renderSiteTypeForm()}\n      {currentStep === 'structure' && renderStructureForm()}\n      {currentStep === 'claude-response' && renderClaudeResponse()}\n      \n    </div>\n  );\n};\n\nexport default MainPage; "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAKA,4BAA4B;AAE5B,MAAM,YAAY;IAChB;QAAE,MAAM;QAAiB,MAAM;IAAK;IACpC;QAAE,MAAM;QAAkB,MAAM;IAAK;IACrC;QAAE,MAAM;QAAU,MAAM;IAAK;IAC7B;QAAE,MAAM;QAAa,MAAM;IAAK;IAChC;QAAE,MAAM;QAAW,MAAM;IAAK;IAC9B;QAAE,MAAM;QAAU,MAAM;IAAK;IAC7B;QAAE,MAAM;QAAS,MAAM;IAAK;IAC5B;QAAE,MAAM;QAAS,MAAM;IAAK;IAC5B;QAAE,MAAM;QAAU,MAAM;IAAK;IAC7B;QAAE,MAAM;QAAU,MAAM;IAAK;CAE9B;AAED,MAAM,YAAY;IAChB;QAAE,MAAM;QAAW,MAAM;IAAK;IAC9B;QAAE,MAAM;QAAW,MAAM;IAAK;IAC9B;QAAE,MAAM;QAAU,MAAM;IAAK;IAC7B;QAAE,MAAM;QAAU,MAAM;IAAK;IAC7B;QAAE,MAAM;QAAW,MAAM;IAAK;IAC9B;QAAE,MAAM;QAAW,MAAM;IAAK;IAC9B;QAAE,MAAM;QAAa,MAAM;IAAK;CAEjC;AAED,MAAM,YAAY;IAChB;QAAE,MAAM;QAAe,OAAO;IAAc;IAC5C;QAAE,MAAM;QAAc,OAAO;IAAa;CAC3C;AAGD,yCAAyC;AACzC,MAAM,kBAAkB,OAAO,WAAmB;IAChD,MAAM,WAAW,MAAM,MAAM,qBAAqB;QAChD,QAAQ;QACR,SAAS;YACP,gBAAgB;QAClB;QACA,MAAM,KAAK,SAAS,CAAC;YACnB;YACA;QACF;IACF;IAEA,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,SAAS,MAAM,EAAE;IAC1D;IAEA,OAAO,MAAM,SAAS,IAAI;AAC5B;AAEA,MAAM,WAAqB;IACzB,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAA6D;IAC1G,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IACxE,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IACpE,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAChE,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAc;IACnE,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAC7D,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IACjE,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAEzD,oDAAoD;IACpD,MAAM,0BAA0B,OAAO,WAAmB,aAAqB,WAAmB,eAAuB;QACvH,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,yBAAyB;gBACpD,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;oBACnB;oBACA;oBACA;oBACA;oBACA;gBACF;YACF;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,QAAQ,KAAK,CAAC,wCAAwC,SAAS,MAAM;YACvE,OAAO;gBACL,QAAQ,GAAG,CAAC;gBACZ,kBAAkB;YACpB;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,uCAAuC;QACvD;IACF;IAEA,gDAAgD;IAChD,MAAM,sBAAsB,OAAO;QACjC,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,CAAC,gCAAgC,EAAE,WAAW;YAC3E,IAAI,SAAS,EAAE,EAAE;gBACf,MAAM,OAAO,MAAM,SAAS,IAAI;gBAEhC,uCAAuC;gBACvC,IAAI,KAAK,MAAM,EAAE;oBACf,oBAAoB,KAAK,MAAM,CAAC,QAAQ,IAAI;oBAC5C,gBAAgB,mBAAmB,KAAK,MAAM,CAAC,QAAQ,IAAI;gBAC7D;gBAEA,uBAAuB;gBACvB,IAAI,KAAK,WAAW,IAAI,KAAK,OAAO,EAAE;oBACpC,mBAAmB,KAAK,OAAO;oBAC/B,kBAAkB;oBAClB,oBAAoB;oBACpB,gBAAgB;oBAChB,OAAO,KAAK,OAAO;gBACrB,OAAO,IAAI,KAAK,MAAM,EAAE,WAAW,eAAe,KAAK,OAAO,EAAE;oBAC9D,mBAAmB,KAAK,OAAO;oBAC/B,kBAAkB;oBAClB,oBAAoB;oBACpB,gBAAgB;oBAChB,OAAO,KAAK,OAAO;gBACrB,OAAO,IAAI,KAAK,MAAM,EAAE,WAAW,eAAe;oBAChD,kBAAkB;gBACpB,OAAO,IAAI,KAAK,MAAM,EAAE,WAAW,aAAa;oBAC9C,kBAAkB;oBAClB,oBAAoB;oBACpB,IAAI,KAAK,OAAO,EAAE;wBAChB,mBAAmB,KAAK,OAAO;oBACjC;gBACF,OAAO,IAAI,KAAK,MAAM,EAAE,WAAW,UAAU;oBAC3C,kBAAkB;oBAClB,gBAAgB,KAAK,MAAM,CAAC,KAAK,IAAI;gBACvC;YACF;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,mCAAmC;QACnD;QACA,OAAO;IACT;IAEA,4DAA4D;IAC5D,MAAM,qBAAqB,CAAC;QAC1B,IAAI,aAAa,GAAG,OAAO;QAC3B,IAAI,YAAY,IAAI,OAAO;QAC3B,IAAI,YAAY,IAAI,OAAO;QAC3B,IAAI,YAAY,IAAI,OAAO;QAC3B,IAAI,YAAY,IAAI,OAAO;QAC3B,IAAI,YAAY,IAAI,OAAO;QAC3B,IAAI,WAAW,KAAK,OAAO;QAC3B,OAAO;IACT;IAEA,qCAAqC;IACrC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI;QAEJ,IAAI,oBAAoB,CAAC,mBAAmB,aAAa,mBAAmB,aAAa,GAAG;YAC1F,WAAW,YAAY;gBACrB,MAAM,oBAAoB;YAC5B,GAAG,OAAO,iCAAiC;QAC7C;QAEA,OAAO;YACL,IAAI,UAAU;gBACZ,cAAc;YAChB;QACF;IACF,GAAG;QAAC;QAAkB;KAAe;IACrC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QACvC,YAAY;QACZ,gBAAgB;QAChB,iBAAiB;IACnB;IACA,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QAC/C,WAAW;IACb;IACA,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QACjD,eAAe,EAAE;QACjB,cAAc,CAAC;IACjB;IAEA,oCAAoC;IACpC,MAAM,sBAAsB,CAAC,WAAmB,SAAiB;QAC/D,MAAM,cAAc,UAAU,IAAI,CAAC,CAAA,IAAK,EAAE,IAAI,KAAK,UAAU,QAAQ;QACrE,MAAM,eAAe,UAAU,IAAI,CAAC,CAAA,IAAK,EAAE,IAAI,KAAK,WAAW,QAAQ;QACvE,MAAM,OAAO,IAAI,OAAO,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,MAAM,KAAK,kBAAkB;QAEzF,4EAA4E;QAC5E,MAAM,iBAAiB,UACpB,WAAW,GACX,OAAO,CAAC,gBAAgB,IACxB,OAAO,CAAC,QAAQ,KAChB,SAAS,CAAC,GAAG,KAAK,eAAe;QAEpC,OAAO,GAAG,eAAe,CAAC,EAAE,YAAY,CAAC,EAAE,aAAa,CAAC,EAAE,MAAM;IACnE;IAEA,+DAA+D;IAC/D,MAAM,6BAA6B,OAAO,WAAmB;QAC3D,IAAI;YACF,yCAAyC;YACzC,IAAI;YAEJ,IAAI;gBACF,wEAAwE;gBACxE,MAAM,YAAY,eAAe,KAAK,CAAC,+BACtB,eAAe,KAAK,CAAC,2BACrB,eAAe,KAAK,CAAC;gBAEtC,IAAI,WAAW;oBACb,gBAAgB,KAAK,KAAK,CAAC,SAAS,CAAC,EAAE,IAAI,SAAS,CAAC,EAAE;gBACzD,OAAO;oBACL,qDAAqD;oBACrD,gBAAgB,KAAK,KAAK,CAAC;gBAC7B;YACF,EAAE,OAAO,YAAY;gBACnB,QAAQ,KAAK,CAAC,4CAA4C;gBAC1D,MAAM,IAAI,MAAM;YAClB;YAEA,iCAAiC;YACjC,IAAI,CAAC,MAAM,OAAO,CAAC,gBAAgB;gBACjC,MAAM,IAAI,MAAM;YAClB;YAEA,mCAAmC;YACnC,MAAM,eAAe,EAAE;YACvB,KAAK,MAAM,QAAQ,cAAe;gBAChC,IAAI;oBACF,MAAM,cAAc,MAAM,CAAA,GAAA,2HAAA,CAAA,oBAAiB,AAAD,EAAE;wBAC1C,YAAY;wBACZ,MAAM,KAAK,IAAI,IAAI;wBACnB,MAAM,KAAK,IAAI,IAAI;wBACnB,SAAS,KAAK,WAAW,IAAI;wBAC7B,SAAS;wBACT,QAAQ;wBACR,QAAQ;oBACV;oBAEA,IAAI,aAAa;wBACf,aAAa,IAAI,CAAC;oBACpB;gBACF,EAAE,OAAO,WAAW;oBAClB,QAAQ,KAAK,CAAC,kCAAkC,KAAK,IAAI,EAAE;gBAC7D;YACF;YAEA,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,kCAAkC;YAChD,MAAM;QACR;IACF;IAEA,MAAM,oBAAoB,CAAC;QACzB,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM;QAChC,YAAY,CAAA,OAAQ,CAAC;gBACnB,GAAG,IAAI;gBACP,CAAC,KAAK,EAAE;YACV,CAAC;IACH;IAEA,MAAM,uBAAuB,CAAC;QAC5B,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM;QAChC,gBAAgB,CAAA,OAAQ,CAAC;gBACvB,GAAG,IAAI;gBACP,CAAC,KAAK,EAAE;YACV,CAAC;IACH;IAEA,MAAM,sBAAsB,CAAC,SAAiB;QAC5C,iBAAiB,CAAA;YACf,MAAM,mBAAmB,aACrB;mBAAI,KAAK,aAAa;gBAAE;aAAQ,GAChC,KAAK,aAAa,CAAC,MAAM,CAAC,CAAA,IAAK,MAAM;YAEzC,4EAA4E;YAC5E,MAAM,kBAAkB;gBAAE,GAAG,KAAK,YAAY;YAAC;YAC/C,IAAI,cAAc,CAAC,eAAe,CAAC,QAAQ,EAAE;gBAC3C,MAAM,eAAe,6HAAA,CAAA,cAAW,CAAC,QAAQ;gBACzC,IAAI,cAAc;oBAChB,eAAe,CAAC,QAAQ,GAAG,aAAa,iBAAiB,CAAC,GAAG,CAAC,CAAA,UAAW,QAAQ,IAAI;gBACvF;YACF;YAEA,OAAO;gBACL,GAAG,IAAI;gBACP,eAAe;gBACf,cAAc;YAChB;QACF;IACF;IAEA,MAAM,yBAAyB,CAAC,SAAiB,aAAqB;QACpE,iBAAiB,CAAA;YACf,MAAM,kBAAkB,KAAK,YAAY,CAAC,QAAQ,IAAI,EAAE;YACxD,MAAM,cAAc,aAChB;mBAAI;gBAAiB;aAAY,GACjC,gBAAgB,MAAM,CAAC,CAAA,IAAK,MAAM;YAEtC,OAAO;gBACL,GAAG,IAAI;gBACP,cAAc;oBACZ,GAAG,KAAK,YAAY;oBACpB,CAAC,QAAQ,EAAE;gBACb;YACF;QACF;IACF;IAEA,MAAM,kBAAkB;QACtB,kBAAkB;QAClB,YAAY;YACV,YAAY;YACZ,gBAAgB;YAChB,iBAAiB;QACnB;QACA,gBAAgB;YACd,WAAW;QACb;QACA,iBAAiB;YACf,eAAe,EAAE;YACjB,cAAc,CAAC;QACjB;QACA,kBAAkB;QAClB,gBAAgB;QAChB,mBAAmB;QACnB,kBAAkB;QAClB,oBAAoB;QACpB,gBAAgB;QAChB,eAAe;QACf,oBAAoB;QACpB,eAAe;IACjB;IAEA,MAAM,wBAAwB,OAAO;QACnC,EAAE,cAAc;QAChB,aAAa;QAEb,IAAI;YACF,IAAI,CAAC,kBAAkB;gBACrB,MAAM,IAAI,MAAM;YAClB;YAEA,gDAAgD;YAChD,MAAM,iBAAiB,MAAM,CAAA,GAAA,2HAAA,CAAA,iBAAc,AAAD,EAAE;YAC5C,IAAI,CAAC,gBAAgB;gBACnB,MAAM,IAAI,MAAM;YAClB;YAEA,wCAAwC;YACxC,MAAM,gBAAgB;gBAAC;mBAAW,cAAc,aAAa,CAAC,MAAM,CAAC,CAAA,IAAK,MAAM;aAAQ;YACxF,+DAA+D;YAC/D,MAAM,eAAyC,CAAC;YAChD,cAAc,OAAO,CAAC,CAAA;gBACpB,MAAM,WAAW,cAAc,YAAY,CAAC,QAAQ;gBACpD,IAAI,YAAY,SAAS,MAAM,GAAG,GAAG;oBACnC,2CAA2C;oBAC3C,YAAY,CAAC,QAAQ,GAAG;gBAC1B,OAAO;oBACL,iEAAiE;oBACjE,MAAM,eAAe,6HAAA,CAAA,cAAW,CAAC,QAAQ;oBACzC,IAAI,cAAc;wBAChB,YAAY,CAAC,QAAQ,GAAG,aAAa,iBAAiB,CAAC,GAAG,CAAC,CAAA,UAAW,QAAQ,IAAI;oBACpF,OAAO;wBACL,YAAY,CAAC,QAAQ,GAAG,EAAE;oBAC5B;gBACF;YACF;YAEA,yBAAyB;YACzB,MAAM,gBAAgB;gBACpB;gBACA;gBACA,YAAY,cAAc,MAAM;gBAChC,sBAAsB,IAAI,OAAO,WAAW;YAC9C;YAEA,yEAAyE;YACzE,MAAM,mBAAmB;gBACvB,YAAY,eAAe,UAAU,EAAE,cAAc;gBACrD,gBAAgB,eAAe,UAAU,EAAE,kBAAkB;gBAC7D,iBAAiB,eAAe,UAAU,EAAE,mBAAmB;gBAC/D,WAAW,eAAe,UAAU,EAAE,aAAa;gBACnD,uBAAuB,eAAe,UAAU,EAAE,yBAAyB;gBAC3E,WAAW;YACb;YAEA,mDAAmD;YACnD,MAAM,aAAa;gBACjB,OAAO;gBACP,YAAY;YACd;YAEA,MAAM,SAAS,MAAM,CAAA,GAAA,2HAAA,CAAA,gBAAa,AAAD,EAAE,kBAAkB;YAErD,IAAI,QAAQ;gBACV,0DAA0D;gBAC1D,MAAM,iBAAiB;oBACrB,YAAY,iBAAiB,UAAU;oBACvC,gBAAgB,iBAAiB,cAAc;oBAC/C,iBAAiB,iBAAiB,eAAe;oBACjD,WAAW,iBAAiB,SAAS;oBACrC,WAAW,iBAAiB,SAAS;gBACvC;gBAEA,MAAM,cAAc,MAAM,gBAAgB,eAAe;gBAEzD,IAAI,YAAY,OAAO,IAAI,YAAY,QAAQ,EAAE;oBAC/C,qBAAqB;oBACrB,MAAM,CAAA,GAAA,2HAAA,CAAA,kBAAe,AAAD,EAAE;wBACpB,YAAY;wBACZ,OAAO;wBACP,MAAM;wBACN,OAAO;wBACP,QAAQ;4BAAE,UAAU,YAAY,QAAQ;wBAAC;wBACzC,QAAQ;wBACR,MAAM,YAAY,QAAQ;oBAC5B;oBAEA,mDAAmD;oBACnD,IAAI;wBACF,MAAM,eAAe,MAAM,2BAA2B,kBAAkB,YAAY,QAAQ;wBAC5F,QAAQ,GAAG,CAAC,0BAA0B;oBACxC,EAAE,OAAO,YAAY;wBACnB,QAAQ,KAAK,CAAC,oCAAoC;oBACpD;oBAEA,6DAA6D;oBAC7D,kBAAkB,YAAY,QAAQ;oBACtC,gBAAgB,YAAY,YAAY,IAAI;oBAC5C,eAAe;oBACf,eAAe;oBAEf,uBAAuB;oBACvB,MAAM,CAAA,GAAA,2HAAA,CAAA,gBAAa,AAAD,EAAE,kBAAkB;wBACpC,OAAO;wBACP,YAAY;oBACd;oBAEA,+BAA+B;oBAC/B,WAAW;wBACT,eAAe;oBACjB,GAAG;gBACL,OAAO;oBACL,wBAAwB;oBACxB,QAAQ,KAAK,CAAC,2BAA2B;oBAEzC,MAAM,CAAA,GAAA,2HAAA,CAAA,kBAAe,AAAD,EAAE;wBACpB,YAAY;wBACZ,OAAO;wBACP,MAAM;wBACN,OAAO;wBACP,QAAQ;wBACR,QAAQ;wBACR,OAAO,YAAY,KAAK,IAAI;oBAC9B;oBAEA,MAAM,CAAC,kDAAkD,EAAE,YAAY,KAAK,IAAI,iBAAiB;gBACnG;YACF,OAAO;gBACL,MAAM;YACR;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,+BAA+B;YAC7C,MAAM,CAAC,mBAAmB,EAAE,iBAAiB,QAAQ,MAAM,OAAO,GAAG,iBAAiB;QACxF,SAAU;YACR,aAAa;QACf;IACF;IAEA,MAAM,sBAAsB,OAAO;QACjC,EAAE,cAAc;QAChB,aAAa;QAEb,IAAI;YACF,wBAAwB;YACxB,MAAM,cAAc,oBAClB,SAAS,UAAU,EACnB,SAAS,cAAc,EACvB,SAAS,eAAe;YAG1B,gDAAgD;YAChD,MAAM,cAAc;gBAClB,QAAQ;gBACR,OAAO;gBACP,YAAY;oBACV,YAAY,SAAS,UAAU;oBAC/B,gBAAgB,SAAS,cAAc;oBACvC,iBAAiB,SAAS,eAAe;oBACzC,WAAW;oBACX,uBAAuB;oBACvB,WAAW;gBACb;gBACA,MAAM;oBACJ,cAAc;oBACd,cAAc,IAAI,OAAO,WAAW;oBACpC,cAAc;gBAChB;gBACA,aAAa;YACf;YAEA,MAAM,SAAS,MAAM,CAAA,GAAA,2HAAA,CAAA,gBAAa,AAAD,EAAE;YAEnC,IAAI,QAAQ;gBACV,oBAAoB,OAAO,EAAE;gBAE7B,oDAAoD;gBACpD,MAAM,wBACJ,OAAO,EAAE,EACT,aACA,SAAS,UAAU,EACnB,SAAS,cAAc,EACvB,SAAS,eAAe;gBAG1B,eAAe;gBACf,eAAe;gBAEf,+BAA+B;gBAC/B,WAAW;oBACT,eAAe;gBACjB,GAAG;YACL,OAAO;gBACL,MAAM;YACR;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,0BAA0B;YACxC,MAAM;QACR,SAAU;YACR,aAAa;QACf;IACF;IAEA,MAAM,uBAAuB,OAAO;QAClC,EAAE,cAAc;QAChB,aAAa;QAEb,IAAI;YACF,IAAI,CAAC,kBAAkB;gBACrB,MAAM,IAAI,MAAM;YAClB;YAEA,2DAA2D;YAC3D,MAAM,iBAAiB,MAAM,CAAA,GAAA,2HAAA,CAAA,iBAAc,AAAD,EAAE;YAC5C,IAAI,CAAC,gBAAgB;gBACnB,MAAM,IAAI,MAAM;YAClB;YAEA,oEAAoE;YACpE,MAAM,mBAAmB;gBACvB,YAAY,eAAe,UAAU,EAAE,cAAc;gBACrD,gBAAgB,eAAe,UAAU,EAAE,kBAAkB;gBAC7D,iBAAiB,eAAe,UAAU,EAAE,mBAAmB;gBAC/D,WAAW,aAAa,SAAS;gBACjC,uBAAuB,IAAI,OAAO,WAAW;gBAC7C,WAAW,eAAe,UAAU,EAAE,aAAa;YACrD;YAEA,8CAA8C;YAC9C,MAAM,aAAa;gBACjB,OAAO;gBACP,YAAY;YACd;YAEA,MAAM,SAAS,MAAM,CAAA,GAAA,2HAAA,CAAA,gBAAa,AAAD,EAAE,kBAAkB;YAErD,IAAI,QAAQ;gBACV,8DAA8D;gBAC9D,MAAM,WAAW,6HAAA,CAAA,cAAW,CAAC,OAAO;gBACpC,IAAI,YAAY,CAAC,cAAc,YAAY,CAAC,OAAO,EAAE;oBACnD,iBAAiB,CAAA,OAAQ,CAAC;4BACxB,GAAG,IAAI;4BACP,cAAc;gCACZ,GAAG,KAAK,YAAY;gCACpB,QAAQ,SAAS,iBAAiB,CAAC,GAAG,CAAC,CAAA,UAAW,QAAQ,IAAI;4BAChE;wBACF,CAAC;gBACH;gBACA,eAAe;YACjB,OAAO;gBACL,MAAM;YACR;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,+BAA+B;YAC7C,MAAM;QACR,SAAU;YACR,aAAa;QACf;IACF;IAEA,MAAM,oBAAoB,kBACxB,8OAAC;YAAK,UAAU;YAAqB,WAAU;;8BAC7C,8OAAC;;sCACC,8OAAC;4BAAM,SAAQ;4BAAa,WAAU;sCAAgD;;;;;;sCAGtF,8OAAC;4BACC,IAAG;4BACH,MAAK;4BACL,MAAK;4BACL,QAAQ;4BACR,OAAO,SAAS,UAAU;4BAC1B,UAAU;4BACV,WAAU;4BACV,aAAY;;;;;;;;;;;;8BAGhB,8OAAC;;sCACC,8OAAC;4BAAM,SAAQ;4BAAiB,WAAU;sCAAgD;;;;;;sCAG1F,8OAAC;4BACC,IAAG;4BACH,MAAK;4BACL,QAAQ;4BACR,OAAO,SAAS,cAAc;4BAC9B,UAAU;4BACV,WAAU;;8CAEV,8OAAC;oCAAO,OAAM;8CAAG;;;;;;gCAGhB,UAAU,GAAG,CAAC,CAAC,wBACd,8OAAC;wCAA0B,OAAO,QAAQ,IAAI;kDAC3C,QAAQ,IAAI;uCADF,QAAQ,IAAI;;;;;;;;;;;;;;;;;8BAM/B,8OAAC;;sCACC,8OAAC;4BAAM,SAAQ;4BAAkB,WAAU;sCAAgD;;;;;;sCAG3F,8OAAC;4BACC,IAAG;4BACH,MAAK;4BACL,QAAQ;4BACR,OAAO,SAAS,eAAe;4BAC/B,UAAU;4BACV,WAAU;;8CAEV,8OAAC;oCAAO,OAAM;8CAAG;;;;;;gCAGhB,UAAU,GAAG,CAAC,CAAC,yBACd,8OAAC;wCAA2B,OAAO,SAAS,IAAI;kDAC7C,SAAS,IAAI;uCADH,SAAS,IAAI;;;;;;;;;;;;;;;;;8BAMhC,8OAAC;oBACC,MAAK;oBACL,UAAU;oBACV,WAAU;8BAET,YAAY,wBAAwB;;;;;;;;;;;;IAK3C,MAAM,qBAAqB,kBACzB,8OAAC;YAAI,WAAU;;gBAEZ;8BAED,8OAAC;oBAAK,UAAU;oBAAsB,WAAU;;sCAC9C,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAG,WAAU;8CAA4C;;;;;;8CAGpD,8OAAC;oCAAE,WAAU;8CAAiB;;;;;;;;;;;;sCAKxC,8OAAC;;8CACC,8OAAC;oCAAM,SAAQ;oCAAY,WAAU;8CAAgD;;;;;;8CAGrF,8OAAC;oCACC,IAAG;oCACH,MAAK;oCACL,QAAQ;oCACR,OAAO,aAAa,SAAS;oCAC7B,UAAU;oCACV,WAAU;;sDAEV,8OAAC;4CAAO,OAAM;sDAAG;;;;;;wCAGhB,UAAU,GAAG,CAAC,CAAC,qBACd,8OAAC;gDAAwB,OAAO,KAAK,KAAK;0DACvC,KAAK,IAAI;+CADC,KAAK,KAAK;;;;;;;;;;;;;;;;;sCAO7B,8OAAC;4BACC,MAAK;4BACL,UAAU;4BACV,WAAU;sCAET,YAAY,wBAAwB;;;;;;;;;;;;;;;;;;IAM3C,MAAM,sBAAsB;QAC1B,MAAM,eAAe,aAAa,SAAS,KAAK;QAChD,MAAM,iBAAiB,CAAA,GAAA,6HAAA,CAAA,oBAAiB,AAAD;QACvC,MAAM,WAAW,6HAAA,CAAA,cAAW,CAAC,OAAO;QAEpC,qBACE,8OAAC;YAAI,WAAU;;gBAEZ;8BAED,8OAAC;oBAAK,UAAU;oBAAuB,WAAU;;sCACjD,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAG,WAAU;8CACX,eAAe,+BAA+B;;;;;;8CAE7C,8OAAC;oCAAE,WAAU;8CACd,eACG,iEACA;;;;;;;;;;;;sCAMR,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAG,WAAU;;sDACZ,8OAAC;4CAAK,WAAU;sDAA6D;;;;;;wCAC5E,SAAS,IAAI;;;;;;;8CAEhB,8OAAC;oCAAI,WAAU;8CACZ,SAAS,iBAAiB,CAAC,GAAG,CAAC,CAAC;wCAC/B,MAAM,aAAa,cAAc,YAAY,CAAC,OAAO,EAAE,SAAS,QAAQ,IAAI,KAAK;wCACjF,qBACE,8OAAC;4CAEC,WAAW,CAAC,mFAAmF,EAC7F,aACI,+BACA,uDACJ;4CACF,SAAS,IAAM,uBAAuB,QAAQ,QAAQ,IAAI,EAAE,CAAC;sDAE7D,cAAA,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDACC,MAAK;wDACL,IAAI,CAAC,KAAK,EAAE,QAAQ,IAAI,EAAE;wDAC1B,SAAS;wDACT,UAAU,CAAC,IAAM,uBAAuB,QAAQ,QAAQ,IAAI,EAAE,EAAE,MAAM,CAAC,OAAO;wDAC9E,WAAU;wDACV,SAAS,CAAC,IAAM,EAAE,eAAe;;;;;;kEAEnC,8OAAC;wDAAI,WAAU;;0EACb,8OAAC;gEAAM,SAAS,CAAC,KAAK,EAAE,QAAQ,IAAI,EAAE;gEAAE,WAAU;0EAC/C,QAAQ,IAAI;;;;;;0EAEf,8OAAC;gEAAE,WAAU;0EAA+C,QAAQ,OAAO;;;;;;4DAC1E,QAAQ,OAAO,kBACd,8OAAC;gEAAI,WAAU;;oEAAiE;oEAC1E,QAAQ,OAAO;;;;;;;;;;;;;;;;;;;2CAxBtB,QAAQ,IAAI;;;;;oCA+BvB;;;;;;;;;;;;wBAKH,CAAC,8BACA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAG,WAAU;8CAA4C;;;;;;8CAC1D,8OAAC;oCAAI,WAAU;8CACZ,eAAe,GAAG,CAAC,CAAC;wCACnB,MAAM,eAAe,6HAAA,CAAA,cAAW,CAAC,QAAQ;wCACzC,MAAM,aAAa,cAAc,aAAa,CAAC,QAAQ,CAAC;wCAExD,qBACE,8OAAC;4CAAkB,WAAU;;8DAC3B,8OAAC;oDACC,WAAW,CAAC,wFAAwF,EAClG,aACI,+BACA,uDACJ;oDACF,SAAS,IAAM,oBAAoB,SAAS,CAAC;8DAE7C,cAAA,8OAAC;wDAAI,WAAU;;0EACb,8OAAC;gEACC,MAAK;gEACL,IAAI,CAAC,KAAK,EAAE,SAAS;gEACrB,SAAS;gEACT,UAAU,CAAC,IAAM,oBAAoB,SAAS,EAAE,MAAM,CAAC,OAAO;gEAC9D,WAAU;gEACV,SAAS,CAAC,IAAM,EAAE,eAAe;;;;;;0EAEnC,8OAAC;gEAAI,WAAU;0EACb,cAAA,8OAAC;oEAAM,SAAS,CAAC,KAAK,EAAE,SAAS;oEAAE,WAAU;8EAC1C,aAAa,IAAI;;;;;;;;;;;;;;;;;;;;;;gDAOzB,4BACC,8OAAC;oDAAI,WAAU;;sEACb,8OAAC;4DAAE,WAAU;sEAA0C;;;;;;sEACvD,8OAAC;4DAAI,WAAU;sEACZ,aAAa,iBAAiB,CAAC,GAAG,CAAC,CAAC;gEACnC,MAAM,oBAAoB,cAAc,YAAY,CAAC,QAAQ,EAAE,SAAS,QAAQ,IAAI,KAAK;gEACzF,qBACE,8OAAC;oEAEC,WAAW,CAAC,mFAAmF,EAC7F,oBACI,iCACA,uDACJ;oEACF,SAAS,IAAM,uBAAuB,SAAS,QAAQ,IAAI,EAAE,CAAC;8EAE9D,cAAA,8OAAC;wEAAI,WAAU;;0FACb,8OAAC;gFACC,MAAK;gFACL,IAAI,GAAG,QAAQ,CAAC,EAAE,QAAQ,IAAI,EAAE;gFAChC,SAAS;gFACT,UAAU,CAAC,IAAM,uBAAuB,SAAS,QAAQ,IAAI,EAAE,EAAE,MAAM,CAAC,OAAO;gFAC/E,WAAU;gFACV,SAAS,CAAC,IAAM,EAAE,eAAe;;;;;;0FAEnC,8OAAC;gFAAI,WAAU;;kGACb,8OAAC;wFAAM,SAAS,GAAG,QAAQ,CAAC,EAAE,QAAQ,IAAI,EAAE;wFAAE,WAAU;kGACrD,QAAQ,IAAI;;;;;;kGAEf,8OAAC;wFAAE,WAAU;kGAA+C,QAAQ,OAAO;;;;;;oFAC1E,QAAQ,OAAO,kBACd,8OAAC;wFAAI,WAAU;;4FAAqD;4FAC9D,QAAQ,OAAO;;;;;;;;;;;;;;;;;;;mEAxBtB,QAAQ,IAAI;;;;;4DA+BvB;;;;;;;;;;;;;2CAlEE;;;;;oCAwEd;;;;;;;;;;;;sCAKN,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCACC,MAAK;oCACL,SAAS,IAAM,eAAe;oCAC9B,WAAU;8CACX;;;;;;8CAGD,8OAAC;oCACC,MAAK;oCACL,UAAU;oCACV,WAAU;8CAEjB,YAAY,8BAA8B;;;;;;;;;;;;;;;;;;;;;;;;IAM7C;IAEA,MAAM,wBAAwB;QAC5B,IAAI,CAAC,iBAAiB,OAAO;QAE7B,qBACE,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;;8CACZ,8OAAC;oCAAK,WAAU;8CAA+D;;;;;;gCAAe;;;;;;;sCAGhG,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;;wCAAyB;wCACxB,gBAAgB,QAAQ,EAAE,aAAa,GAAG,KAAK,KAAK,CAAC,gBAAgB,QAAQ,CAAC,UAAU,GAAG,MAAM,CAAC,CAAC,GAAG;;;;;;;8CAEtH,8OAAC;oCAAI,WAAU;8CACZ,gBAAgB,QAAQ,EAAE,QAAQ,CAAC,CAAC,EAAE,gBAAgB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;;;;;;;;;;;;;;;;;8BAK7E,8OAAC;oBAAI,WAAU;;wBACZ,gBAAgB,OAAO,EAAE,SAAS,mBACjC,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAG,WAAU;;gDAAgD;gDAC/C,gBAAgB,OAAO,CAAC,MAAM;gDAAC;;;;;;;sDAE9C,8OAAC;4CAAI,WAAU;sDAAsD;;;;;;;;;;;;8CAIvE,8OAAC;oCAAG,WAAU;8CACX,gBAAgB,OAAO,CAAC,GAAG,CAAC,CAAC,OAAe,sBAC3C,8OAAC;4CAAe,WAAU;;8DACxB,8OAAC;oDAAK,WAAU;8DAAqB;;;;;;8DACrC,8OAAC;8DAAM;;;;;;;2CAFA;;;;;;;;;;;;;;;;wBAShB,gBAAgB,SAAS,EAAE,SAAS,mBACnC,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAG,WAAU;;gDAAiD;gDAC9C,gBAAgB,SAAS,CAAC,MAAM;gDAAC;;;;;;;sDAElD,8OAAC;4CAAI,WAAU;sDAAwD;;;;;;;;;;;;8CAIzE,8OAAC;oCAAG,WAAU;8CACX,gBAAgB,SAAS,CAAC,GAAG,CAAC,CAAC,UAAkB,sBAChD,8OAAC;4CAAe,WAAU;;8DACxB,8OAAC;oDAAK,WAAU;8DAAsB;;;;;;8DACtC,8OAAC;8DAAM;;;;;;;2CAFA;;;;;;;;;;;;;;;;wBAShB,gBAAgB,QAAQ,EAAE,SAAS,mBAClC,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAG,WAAU;;gDAAkD;gDAC/C,gBAAgB,QAAQ,CAAC,MAAM;gDAAC;;;;;;;sDAEjD,8OAAC;4CAAI,WAAU;sDAA0D;;;;;;;;;;;;8CAI3E,8OAAC;oCAAG,WAAU;8CACX,gBAAgB,QAAQ,CAAC,GAAG,CAAC,CAAC,MAAc,sBAC3C,8OAAC;4CAAe,WAAU;;8DACxB,8OAAC;oDAAK,WAAU;8DAAuB;;;;;;8DACvC,8OAAC;8DAAM;;;;;;;2CAFA;;;;;;;;;;;;;;;;wBAShB,gBAAgB,IAAI,kBACnB,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAG,WAAU;sDAAkD;;;;;;sDAGhE,8OAAC;4CAAI,WAAU;sDAA0D;;;;;;;;;;;;8CAI3E,8OAAC;oCAAE,WAAU;8CAA2B,gBAAgB,IAAI;;;;;;;;;;;;;;;;;;8BAKlE,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;;oCAAI;oCACqB,IAAI,KAAK,gBAAgB,QAAQ,EAAE,aAAa,IAAI,cAAc;;;;;;;0CAE5F,8OAAC;;oCAAI;oCACe,gBAAgB,QAAQ,EAAE,gBAAgB,UAAU;oCAAE;;;;;;;;;;;;;;;;;;;;;;;;IAMpF;IAEA,MAAM,uBAAuB;QAC3B,IAAI,mBAAmB,QAAQ,OAAO;QAEtC,qBACE,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAW,CAAC,sDAAsD,EACrE,mBAAmB,YAAY,8BAC/B,mBAAmB,gBAAgB,gCACnC,mBAAmB,cAAc,iBACjC,cACA;;wCACC,mBAAmB,6BAClB,8OAAC;4CAAI,WAAU;4CAAqB,MAAK;4CAAO,QAAO;4CAAe,SAAQ;sDAC5E,cAAA,8OAAC;gDAAK,eAAc;gDAAQ,gBAAe;gDAAQ,aAAa;gDAAG,GAAE;;;;;;;;;;;wCAGxE,mBAAmB,0BAClB,8OAAC;4CAAI,WAAU;4CAAqB,MAAK;4CAAO,QAAO;4CAAe,SAAQ;sDAC5E,cAAA,8OAAC;gDAAK,eAAc;gDAAQ,gBAAe;gDAAQ,aAAa;gDAAG,GAAE;;;;;;;;;;;;;;;;;8CAI3E,8OAAC;;sDACC,8OAAC;4CAAG,WAAU;sDAAuC;;;;;;sDAGrD,8OAAC;4CAAE,WAAU;sDAA0B;;;;;;;;;;;;;;;;;;sCAG3C,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;;wCAAqC;wCAAiB;;;;;;;8CACrE,8OAAC;oCAAI,WAAU;8CAAyB;;;;;;;;;;;;;;;;;;8BAK5C,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBACC,WAAW,CAAC,sDAAsD,EAChE,mBAAmB,cAAc,iBACjC,mBAAmB,WAAW,eAC9B,eACA;wBACF,OAAO;4BAAE,OAAO,GAAG,iBAAiB,CAAC,CAAC;wBAAC;;;;;;;;;;;8BAK3C,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAW,CAAC,qBAAqB,EACpC,oBAAoB,KAAK,iBAAiB,gBAC1C;;;;;;8CACF,8OAAC;oCAAK,WAAW,oBAAoB,KAAK,mBAAmB;8CAAkB;;;;;;;;;;;;sCAIjF,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAW,CAAC,qBAAqB,EACpC,oBAAoB,KAAK,iBAAiB,gBAC1C;;;;;;8CACF,8OAAC;oCAAK,WAAW,oBAAoB,KAAK,mBAAmB;8CAAkB;;;;;;;;;;;;sCAIjF,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAW,CAAC,qBAAqB,EACpC,oBAAoB,KAAK,iBAAiB,gBAC1C;;;;;;8CACF,8OAAC;oCAAK,WAAW,oBAAoB,KAAK,mBAAmB;8CAAkB;;;;;;;;;;;;;;;;;;gBAOlF,mBAAmB,0BAClB,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;oCAAuB,MAAK;oCAAO,QAAO;oCAAe,SAAQ;8CAC9E,cAAA,8OAAC;wCAAK,eAAc;wCAAQ,gBAAe;wCAAQ,aAAa;wCAAG,GAAE;;;;;;;;;;;8CAEvE,8OAAC;oCAAK,WAAU;8CAAmC;;;;;;;;;;;;sCAErD,8OAAC;4BAAE,WAAU;sCAA6B;;;;;;;;;;;;;;;;;;IAKpD;IAEA,MAAM,uBAAuB,kBAC3B,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAA4C;;;;;;sCAG1D,8OAAC;4BAAE,WAAU;sCAAiB;;;;;;;;;;;;gBAM/B;gBAGA;gBAEA,8BACC,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;;8CACZ,8OAAC;oCAAK,WAAU;8CAA2D;;;;;;gCAAY;;;;;;;sCAGzF,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAI,WAAU;0CACZ;;;;;;;;;;;;;;;;;gBAMR,gCACC,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;;8CACZ,8OAAC;oCAAK,WAAU;8CAA6D;;;;;;gCAAa;;;;;;;sCAG5F,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAI,WAAU;0CACZ;;;;;;;;;;;;;;;;;8BAMT,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BACC,SAAS;4BACT,WAAU;sCACX;;;;;;sCAGD,8OAAC;4BACC,SAAS;gCACP,QAAQ,GAAG,CAAC,sBAAsB;gCAClC,MAAM;4BACR;4BACA,WAAU;sCACX;;;;;;;;;;;;;;;;;;IAOP,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAAuC;;;;;;YAEpD,6BACC,8OAAC;gBAAI,WAAU;0BACZ,gBAAgB,YAAY,kCAC5B,gBAAgB,oBAAoB,8CACpC;;;;;;YAIJ,gBAAgB,aAAa;YAC7B,gBAAgB,eAAe;YAC/B,gBAAgB,eAAe;YAC/B,gBAAgB,qBAAqB;;;;;;;AAI5C;uCAEe","debugId":null}}]
}