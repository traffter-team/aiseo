{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":["file:///Users/vkyrychenko/Desktop/aiseo/src/app/api/claude/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\n\n// Simple function to send message to Claude using direct API calls\nasync function sendMessageToClaude(message: string) {\n  try {\n    const apiKey = process.env.ANTHROPIC_API_KEY;\n    \n    if (!apiKey) {\n      throw new Error('ANTHROPIC_API_KEY environment variable is not set');\n    }\n\n    console.log('Sending message to Claude:', message);\n    \n    const response = await fetch('https://api.anthropic.com/v1/messages', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-api-key': apiKey,\n        'anthropic-version': '2023-06-01'\n      },\n      body: JSON.stringify({\n        model: 'claude-3-5-sonnet-20241022',\n        max_tokens: 1000,\n        messages: [\n          {\n            role: 'user',\n            content: message\n          }\n        ]\n      })\n    });\n\n    if (!response.ok) {\n      const errorData = await response.text();\n      throw new Error(`Claude API error: ${response.status} - ${errorData}`);\n    }\n\n    const data = await response.json();\n    \n    // Extract the response content\n    const content = data.content[0];\n    if (content.type !== 'text') {\n      throw new Error('Unexpected response type from Claude');\n    }\n\n    return {\n      success: true,\n      response: content.text,\n      timestamp: new Date().toISOString(),\n      usage: data.usage\n    };\n  } catch (error) {\n    console.error('Error sending message to Claude:', error);\n    return {\n      success: false,\n      error: error instanceof Error ? error.message : 'Failed to send message to Claude'\n    };\n  }\n}\n\nexport async function POST(request: NextRequest) {\n  try {\n    const body = await request.json();\n    const { message } = body;\n\n    if (!message) {\n      return NextResponse.json(\n        { error: 'Message is required' },\n        { status: 400 }\n      );\n    }\n\n    const result = await sendMessageToClaude(message);\n\n    if (result.success) {\n      return NextResponse.json(result);\n    } else {\n      return NextResponse.json(\n        { error: result.error },\n        { status: 500 }\n      );\n    }\n  } catch (error) {\n    console.error('API route error:', error);\n    return NextResponse.json(\n      { error: 'Internal server error' },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function GET() {\n  // Test endpoint with the default weather question\n  const testMessage = \"What's the weather in New York today?\";\n  const result = await sendMessageToClaude(testMessage);\n  \n  return NextResponse.json(result);\n} "],"names":[],"mappings":";;;;AAAA;;AAEA,mEAAmE;AACnE,eAAe,oBAAoB,OAAe;IAChD,IAAI;QACF,MAAM,SAAS,QAAQ,GAAG,CAAC,iBAAiB;QAE5C,IAAI,CAAC,QAAQ;YACX,MAAM,IAAI,MAAM;QAClB;QAEA,QAAQ,GAAG,CAAC,8BAA8B;QAE1C,MAAM,WAAW,MAAM,MAAM,yCAAyC;YACpE,QAAQ;YACR,SAAS;gBACP,gBAAgB;gBAChB,aAAa;gBACb,qBAAqB;YACvB;YACA,MAAM,KAAK,SAAS,CAAC;gBACnB,OAAO;gBACP,YAAY;gBACZ,UAAU;oBACR;wBACE,MAAM;wBACN,SAAS;oBACX;iBACD;YACH;QACF;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,YAAY,MAAM,SAAS,IAAI;YACrC,MAAM,IAAI,MAAM,CAAC,kBAAkB,EAAE,SAAS,MAAM,CAAC,GAAG,EAAE,WAAW;QACvE;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,+BAA+B;QAC/B,MAAM,UAAU,KAAK,OAAO,CAAC,EAAE;QAC/B,IAAI,QAAQ,IAAI,KAAK,QAAQ;YAC3B,MAAM,IAAI,MAAM;QAClB;QAEA,OAAO;YACL,SAAS;YACT,UAAU,QAAQ,IAAI;YACtB,WAAW,IAAI,OAAO,WAAW;YACjC,OAAO,KAAK,KAAK;QACnB;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,oCAAoC;QAClD,OAAO;YACL,SAAS;YACT,OAAO,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QAClD;IACF;AACF;AAEO,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,EAAE,OAAO,EAAE,GAAG;QAEpB,IAAI,CAAC,SAAS;YACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAsB,GAC/B;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,SAAS,MAAM,oBAAoB;QAEzC,IAAI,OAAO,OAAO,EAAE;YAClB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAC3B,OAAO;YACL,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO,OAAO,KAAK;YAAC,GACtB;gBAAE,QAAQ;YAAI;QAElB;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,oBAAoB;QAClC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAwB,GACjC;YAAE,QAAQ;QAAI;IAElB;AACF;AAEO,eAAe;IACpB,kDAAkD;IAClD,MAAM,cAAc;IACpB,MAAM,SAAS,MAAM,oBAAoB;IAEzC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;AAC3B","debugId":null}}]
}